{"version":3,"sources":["../../src/pages/p-creategroup/creategroup.module.ts","../../src/pages/p-creategroup/creategroup.ts"],"names":[],"mappings":"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","file":"42.js","sourcesContent":["\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { CreateGroupPage } from './creategroup';\n \n@NgModule({\n  declarations: [\n    CreateGroupPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(CreateGroupPage),\n  ],\n  exports: [\n    CreateGroupPage\n  ]\n})\nexport class CreateGroupPageModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/p-creategroup/creategroup.module.ts","import { Component, ViewChild, ElementRef, Renderer } from '@angular/core';\nimport { NavController, ModalController, IonicPage, NavParams, AlertController, LoadingController, ViewController  } from 'ionic-angular';\nimport { BoundElementPropertyAst } from '@angular/compiler';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { DriverGeofireService } from '../../services/d-geofire.services';\nimport * as GeoFire from 'geofire';\n\n@IonicPage()\n\n@Component({\n  selector: 'page-creategroup',\n  templateUrl: 'creategroup.html'\n})\nexport class CreateGroupPage {\n  @ViewChild('imageTaxi',{read:ElementRef}) imageTaxi;\n  @ViewChild('imageOtherCar',{read:ElementRef}) imageOtherCar;\n  otherCar:boolean;\n  taxi:boolean;\n  startHour;\n  userId;\n  origin:any;\n  destination:any;\n  latOr:any;\n  lngOr:any;\n  latDest:any;\n  lngDest:any;\n  admin = {};\n  pointsAlongRoute = [];\n  indexesOfPointsAlongRoute = [];\n  count:any = 0;\n  Key_Crew:any;\n  loading:any;\n  seats:number;\n  note:string;\n\n\n  //geofire variables \n  geoquery1:any;\n  geoquery2:any;\n  geofireOriginConfirmed:boolean;\n  keysIdentifiedInOrigin = [];\n  geoqueryRouteOrigin:any;\n  keysIdentifiedInOriginRoute = [];\n  geofireDestinationConfirmed:boolean;\n  driverOnNodeDest:any;\n  geoqueryRouteDestination:any;\n  keyTripForGeofireInRouteDest:any;\n  driverIdForGeofireInRouteDest:any;\n  geofireDestinationConfirmedOnRoute:boolean;\n  geofireOriginConfirmedOnRoute:boolean;\n  city:any;\n\n  constructor(public viewCtrl:ViewController, public loadingCtrl: LoadingController, public alertCtrl: AlertController, public navCtrl: NavController, public modalCtrl: ModalController,public navParams: NavParams,public renderer: Renderer, private afDB: AngularFireDatabase, private firebaseAuth: AngularFireAuth, private geofireServicesDr: DriverGeofireService) {\n    this.userId = this.firebaseAuth.auth.currentUser.uid;\n\n    let origin = this.navParams.get('origin');\n    let destination = this.navParams.get('destination');\n    \n    this.latOr = origin.lat;\n    this.lngOr = origin.lng;\n    this.latDest = destination.lat;\n    this.lngDest = destination.lng;\n    this.pointsAlongRoute = this.navParams.get('pointsAlongRoute');\n    this.indexesOfPointsAlongRoute = this.navParams.get('indexesOfPointsAlongRoute');\n\n\n\n    // Getting info for creating crew in DB\n    this.afDB.database.ref('/usersTest/' + this.userId).once('value').then((snap)=>{\n      if(snap.val()){\n        this.admin = {\n          city: snap.val().city,\n          company: snap.val().company,\n          name: snap.val().name,\n          lastname: snap.val().lastname,\n          phone: snap.val().phone,\n          userId: snap.val().userId,\n          verifiedPerson: snap.val().verifiedPerson,\n        }\n        this.origin = snap.val().trips.origin[0]\n        this.destination = snap.val().trips.destination[0]\n        this.city = snap.val().city\n      }\n      \n    })\n\n  }\n  \n\nselectImageOtherCar(){\n  // this is just to change the css\n  this.renderer.setElementStyle(this.imageOtherCar.nativeElement,'border-width','3px')\n  this.renderer.setElementStyle(this.imageOtherCar.nativeElement,'border-style','solid')\n  this.renderer.setElementStyle(this.imageOtherCar.nativeElement,'border-color','green')\n\n  this.renderer.setElementStyle(this.imageTaxi.nativeElement,'border-width','0px')\n  this.otherCar = true;\n  this.taxi = false;\n\n}\nselectImageTaxi(){\n  // this is just to change the css\n  this.renderer.setElementStyle(this.imageTaxi.nativeElement,'border-width','3px')\n  this.renderer.setElementStyle(this.imageTaxi.nativeElement,'border-style','solid')\n  this.renderer.setElementStyle(this.imageTaxi.nativeElement,'border-color','green')\n\n  this.renderer.setElementStyle(this.imageOtherCar.nativeElement,'border-width','0px')\n  this.otherCar = false;\n  this.taxi = true;\n\n}\n\n\n\ncreateGroup(){\n  if(this.note === undefined || this.note === null){\n    this.note = 'no hay nota'\n  }\n\n  if(this.startHour === undefined){\n    let alert = this.alertCtrl.create({\n      title: 'Por favor confirma la hora a la que iniciaría este viaje',\n      buttons: ['OK']\n    }); \n    alert.present();\n  }else if(this.seats === undefined || this.seats === null){\n\n    let alert = this.alertCtrl.create({\n      title: 'Por favor confirma cuántos puestos dispoibles habrían en este viaje',\n      buttons: ['OK']\n    }); \n    alert.present();\n\n  }else{\n\n    this.afDB.database.ref('/crewsTest/' + this.userId).push({\n      admin: this.admin,\n      startHour: this.startHour,\n      seats: this.seats,\n      note: this.note,\n     \n      destination: {\n        name: this.destination,\n        coords: {\n          lat: this.latDest,\n          lng: this.lngDest\n        }\n      },\n      origin: {\n        name: this.origin,\n        coords: {\n          lat: this.latOr,\n          lng: this.lngOr\n        }\n      }\n    }).then((snap)=>{\n      this.Key_Crew = snap.key;\n      this.afDB.database.ref('/crewsTest/' + this.userId + '/' + this.Key_Crew).update({\n        crewId: this.Key_Crew\n      }).then(()=>{\n\n                this.geofireServicesDr.setGeofireOrCrew( this.Key_Crew, this.latOr, this.lngOr );\n                this.afDB.database.ref('/geofireOrCrew/' + this.Key_Crew,).update({\n                  adminId: this.userId\n                });\n\n                console.log('executed geofire Or for crews');\n\n              this.geofireServicesDr.setGeofireDestCrew( this.Key_Crew, this.latDest, this.lngDest);\n              this.afDB.database.ref('/geofireDestCrew/' + this.Key_Crew).update({\n                adminId: this.userId\n              });\n              \n              console.log('executed geofire dest');\n            \n            \n            this.indexesOfPointsAlongRoute.forEach(index=>{\n                this.count++\n                let newKey = this.Key_Crew.concat(this.count)\n\n                \n                \n                this.geofireServicesDr.setGeofireRouteCrew(newKey, this.pointsAlongRoute[index].lat, this.pointsAlongRoute[index].lng );\n                this.afDB.database.ref('/geofireRouteCrew/' + newKey).update({\n                  adminId: this.userId,\n                  crewId: this.Key_Crew\n              });\n              \n              \n            })  \n\n      })\n\n      \n    }).then(()=>{\n\n      this.afDB.database.ref('allCities/' + this.city ).once('value').then((snapGeoquery)=>{\n\n        this.loading = this.loadingCtrl.create({\n          spinner: 'bubbles',\n          content: `\n            <div class=\"custom-spinner-container\">\n              <div class=\"custom-spinner-box\"></div>\n            </div>`\n            });\n\n        this.setGeofireOr( snapGeoquery.val().geofireOrNotificationsCrew, this.latOr, this.lngOr, this.userId, snapGeoquery.val().geofireDestNotificationsCrew, this.latDest, this.lngDest);\n        this.setGeofireRouteOrigin(snapGeoquery.val().geofireRouteCrew, this.latOr, this.lngOr, snapGeoquery.val().geofireDestNotificationsCrew, this.latDest, this.lngDest, this.userId);\n\n        \n      })\n    })\n  }\n}\n\n\n\n\n  // GEOFIRE LOGIC FOR LET DRIVERS KNOW THERE IS A NEW GRUOP\n   //geoquery origin\n   setGeofireOr( radiusOr:number, latOr, lngOr, userId, radiusDest:number, latDest, lngDest ):void{ \n    let dbRef = this.afDB.database.ref(  '/geofireOr/' );\n    let geoFire = new GeoFire(dbRef); \n  \n    this.geoquery2 = geoFire.query({\n      center: [latOr, lngOr],\n      radius: radiusOr\n    })\n  \n      this.keyEnteredOr(radiusDest, latDest, lngDest, userId  );\n      \n      console.log('geoquery or added');\n      }\n  \n  \n      keyEnteredOr(radiusDest, latDest, lngDest,  userId ){ \n    // var keyEnteredOr = false;\n    this.geoquery2.on(\"key_entered\", function(key, location, distance){\n      //  keyEnteredOr = true;\n       \n       this.geofireOriginConfirmed = true;\n       let orRouteConf = false\n       this.keysIdentifiedInOrigin.push({keyTrip:key, orRouteConf: orRouteConf, distance: distance});\n       \n       if(this.geoquery1){\n  \n       }else{\n        this.setGeofireDest(radiusDest, latDest, lngDest, userId);\n       }\n       \n           \n     }.bind(this));\n      }\n  \n  \n  \n        //geoquery origin in route\n      setGeofireRouteOrigin ( radiusRoute:number, lat, lng, radiusDest, latDest, lngDest, userId):void{ \n        // console.log(this.geoquriesRouteOrigin);\n        let dbRef = this.afDB.database.ref(  '/geofireRoute/' );\n        let geoFire = new GeoFire(dbRef); \n  \n        this.geoqueryRouteOrigin = geoFire.query({\n          center: [lat, lng],\n          radius: radiusRoute\n        })\n  \n        this.keyEnteredRouteOrigin( userId, radiusDest, latDest, lngDest );\n       \n      }\n  \n  \n      keyEnteredRouteOrigin( userId, radiusDest, latDest, lngDest){\n  \n        this.geoqueryRouteOrigin.on(\"key_entered\", function(key, location, distance){\n          \n          this.geofireOriginConfirmedOnRoute = true;\n          let orRouteConf = true\n          \n          this.afDB.database.ref('/geofireRoute/' + key ).once('value').then((snap)=>{\n            // quede aqui, para verificar que las key identificadas son iguales\n            let keyTrip = snap.val().keyTrip;\n            this.keysIdentifiedInOriginRoute.push({\n              keyTrip: keyTrip,\n              orRouteConf: orRouteConf,\n              distance: distance\n            })\n  \n          }).then(()=>{\n            if(this.geoquery1){\n  \n            }else{\n             this.setGeofireDest(radiusDest, latDest, lngDest, userId);\n            }\n  \n          });\n  \n          console.log('ENTRE EN ORIGIN EN ROUTE');\n          \n        }.bind(this));\n      }\n  \n  \n    \n      //geoquery destination\n      setGeofireDest( radiusDest:number, latDest, lngDest, userId):void{ \n        console.log('se prendio geoquery destination, debo salir una sóla vez');\n  \n        let dbRef = this.afDB.database.ref(  '/geofireDest/' );\n        let geoFire = new GeoFire(dbRef); \n      \n        this.geoquery1 = geoFire.query({\n          center: [latDest, lngDest],\n          radius: radiusDest\n        })\n      \n        \n        this.keyEnteredDest( userId);\n        \n      \n      console.log('geoquery dest added');\n      }\n  \n  \n  \n      keyEnteredDest( userId ){\n        \n        this.geoquery1.on(\"key_entered\", function(key, location, distance){\n        console.log(key);\n        if(this.keysIdentifiedInOrigin.length !== 0){\n  \n          let count = 0\n          for(let element of this.keysIdentifiedInOrigin){\n            count = count + 1\n            if(element.keyTrip === key){\n              this.geofireDestinationConfirmed = true;\n              \n              return this.afDB.database.ref( '/geofireDest/'+ key).once('value').then((snap) => {\n                      this.driverOnNodeDest = snap.val();\n          \n                      this.afDB.database.ref( '/driversTest/' + this.driverOnNodeDest.driverId + '/matchingCrews/' + key).update({\n                          crewId: this.Key_Crew,\n                          adminId: userId,\n                          distance: element.distance,\n                          orRouteConf: element.orRouteConf\n              \n                      })  \n                  })\n                 \n               \n            }\n    \n            if (count === this.keysIdentifiedInOrigin.length){\n              console.log('si se ejecuto el for de keysOrigin');\n              \n              for(let element of this.keysIdentifiedInOriginRoute){\n    \n                if(element.keyTrip === key){\n                  console.log('un key de destination es igual al keytrip que fue identificado en origen');\n    \n                  this.geofireDestinationConfirmed = true;\n                  return this.afDB.database.ref( '/geofireDest/'+ key).once('value').then((snap) => {\n                    this.driverOnNodeDest = snap.val();\n        \n                    this.afDB.database.ref( '/driversTest/' + this.driverOnNodeDest.driverId + '/matchingCrews/' + key).update({\n                        crewId: this.Key_Crew,\n                        adminId: userId,\n                        distance: element.distance,\n                        orRouteConf: element.orRouteConf\n            \n                    })  \n                })\n                }\n    \n              }\n            }\n          }\n  \n        }else if(this.keysIdentifiedInOriginRoute.length !== 0){\n  \n          for(let element of this.keysIdentifiedInOriginRoute){\n    \n            if(element.keyTrip === key){\n              console.log('un key de destination es igual al keytrip que fue identificado en origen');\n  \n              this.geofireDestinationConfirmed = true;\n              return this.afDB.database.ref( '/geofireDest/'+ key).once('value').then((snap) => {\n                this.driverOnNodeDest = snap.val();\n    \n                this.afDB.database.ref( '/driversTest/' + this.driverOnNodeDest.driverId + '/matchingCrews/' + key).update({\n                    crewId: this.Key_Crew,\n                    adminId: userId,\n                    distance: element.distance,\n                    orRouteConf: element.orRouteConf\n        \n                })  \n            })\n            }\n  \n          }\n  \n        }else{\n  \n        }\n       \n      \n       }.bind(this))\n  \n  \n       setTimeout(() => {\n        this.geoquery1.on(\"ready\", function(){\n          \n          this.afDB.database.ref('allCities/' + this.city ).once('value').then((snap)=>{\n  \n              this.setGeofireRouteDest(snap.val().geofireRouteCrew,  this.latDest, this.lngDest, userId);\n  \n          })\n          \n   \n        \n      }.bind(this))\n    }, 300);\n   }\n  \n  \n  \n      //geoquery destination in route\n      setGeofireRouteDest( radiusRoute:number, lat, lng, userId ):void{ \n        console.log('se ejecutó');\n  \n        let dbRef = this.afDB.database.ref(  '/geofireRoute/' );\n        let geoFire = new GeoFire(dbRef); \n      \n        this.geoqueryRouteDestination = geoFire.query({\n          center: [lat, lng],\n          radius: radiusRoute\n        })\n  \n  \n        this.keyEnteredRouteDest(  userId );\n       \n        \n             \n      }\n  \n    \n  \n      keyEnteredRouteDest(userId){\n  \n        this.geoqueryRouteDestination.on(\"key_entered\", function(key, location, distance){\n    \n          \n          this.afDB.database.ref('/geofireRoute/' + key ).once('value').then((snap)=>{\n            this.keyTripForGeofireInRouteDest = snap.val().keyTrip;\n            this.driverIdForGeofireInRouteDest = snap.val().driverId;\n            \n            \n          }).then(()=>{\n            if(this.keysIdentifiedInOrigin !== 0){\n  \n              let count = 0\n              for(let element of this.keysIdentifiedInOrigin){\n                count = count + 1\n                if(element.keyTrip === this.keyTripForGeofireInRouteDest){\n                  this.geofireDestinationConfirmedOnRoute = true;\n                  \n                  return this.afDB.database.ref( '/geofireRoute/'+ key).once('value').then((snap) => {\n                    this.driverIdForGeofireInRouteDest = snap.val().driverId;\n                    this.keyTripForGeofireInRouteDest = snap.val().keyTrip\n        \n                    this.afDB.database.ref( '/driversTest/' + this.driverIdForGeofireInRouteDest + '/matchingCrews/' + this.keyTripForGeofireInRouteDest).update({\n                        crewId: this.Key_Crew,\n                        adminId: userId,\n                        distance: element.distance,\n                        orRouteConf: element.orRouteConf,\n                        destRouteConf: true\n            \n                    })  \n                })\n               \n                   \n                }\n    \n                if(count === this.keysIdentifiedInOrigin.length){\n                  for(let element of this.keysIdentifiedInOriginRoute){\n                    if(element.keyTrip === this.keyTripForGeofireInRouteDest){\n                      this.geofireDestinationConfirmedOnRoute = true;\n        \n                      return this.afDB.database.ref( '/geofireRoute/'+ key).once('value').then((snap) => {\n                        this.driverIdForGeofireInRouteDest = snap.val().driverId;\n                        this.keyTripForGeofireInRouteDest = snap.val().keyTrip\n            \n                        this.afDB.database.ref( '/driversTest/' + this.driverIdForGeofireInRouteDest + '/matchingCrews/' + this.keyTripForGeofireInRouteDest).update({\n                            crewId: this.Key_Crew,\n                            adminId: userId,\n                            distance: element.distance,\n                            orRouteConf: element.orRouteConf,\n                            destRouteConf: true\n                \n                        })  \n                    })\n                   \n        \n                    }\n                  }\n                }\n              }\n  \n            }else{\n              console.log('no hay nada en ' + this.keysIdentifiedInOrigin);\n              \n            }\n          })\n          .then(()=>{\n   \n            \n            if(this.keysIdentifiedInOriginRoute !== 0){\n  \n              for(let element of this.keysIdentifiedInOriginRoute){\n                if(element.keyTrip === this.keyTripForGeofireInRouteDest){\n                  this.geofireDestinationConfirmedOnRoute = true;\n    \n                    return this.afDB.database.ref( '/geofireRoute/'+ key).once('value').then((snap) => {\n                      this.driverIdForGeofireInRouteDest = snap.val().driverId;\n                      this.keyTripForGeofireInRouteDest = snap.val().keyTrip\n          \n                      this.afDB.database.ref( '/driversTest/' + this.driverIdForGeofireInRouteDest + '/matchingCrews/' + this.keyTripForGeofireInRouteDest).update({\n                          crewId: this.Key_Crew,\n                          adminId: userId,\n                          distance: element.distance,\n                          orRouteConf: element.orRouteConf,\n                          destRouteConf: true\n              \n                      })  \n                  })\n    \n                }\n              }\n  \n            }else{\n  \n            }\n           \n          })\n                  \n        }.bind(this))\n  \n        \n        this.geoqueryRouteDestination.on(\"ready\", function(){\n          this.loading.dismiss();\n          this.viewCtrl.dismiss();\n  \n          let alert = this.alertCtrl.create({\n            title: 'Eres administrador de este grupo',\n            subTitle: 'Te notificaremos si algún conductor de Waypool quiere hacer el transporte de este grupo',\n            buttons: [{\n              text: 'OK',\n              handler: ()=>{\n                this.navCtrl.push('ReservetripPage');\n              }\n            }]\n          });\n          alert.present();\n  \n        }.bind(this))\n  \n      }\n  \n  \n      //FINISH GEOFIRE FUNCTIONS\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/p-creategroup/creategroup.ts"],"sourceRoot":""}