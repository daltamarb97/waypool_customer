{"version":3,"sources":["../../src/pages/p-listride/listride.module.ts","../../src/pages/p-listride/listride.ts"],"names":[],"mappings":"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","file":"39.js","sourcesContent":["\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ListridePage } from './listride';\n \n@NgModule({\n  declarations: [\n    ListridePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ListridePage),\n  ],\n  exports: [\n    ListridePage\n  ]\n})\nexport class ListridePageModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/p-listride/listride.module.ts","import { Component } from '@angular/core';\nimport { NavController, ModalController, ToastController, IonicPage, App, LoadingController, NavParams, AlertController } from 'ionic-angular';\nimport * as GeoFire from 'geofire';\n\nimport { AngularFireDatabase, AngularFireList} from 'angularfire2/database';\nimport { sendCoordsService } from '../../services/sendCoords.service';\nimport { SignUpService } from '../../services/signup.services';\nimport { geofireService } from '../../services/geoFire.service';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { reservesService } from '../../services/reserves.service';\nimport { TripsService } from '../../services/trips.service';\nimport { Subject } from 'rxjs';\n@IonicPage()\n\n@Component({\n  selector: 'page-listride',\n  templateUrl: 'listride.html'\n})\nexport class ListridePage {\n  reservesAvailable:any = [];\n  routeTrips:any = [];\n  locationDestinationUser:any =[];\n  locationOriginUser:any =[];\n  user:any;\n  userUid=this.AngularFireAuth.auth.currentUser.uid;\n  test:any;\n  reserve:any;\n  ReservesGeofire: any =[];\n  tripsReserved:any =[];\n  reserveLMU:any;\n  unsubscribe = new Subject;\n  pendingUsers:any = []; \n  noReserve:boolean = false;\n\n\n\n  ///VARIABLES GEOFIRE\n  latOr:any;\n  lngOr:any;\n  latDest:any;\n  lngDest:any;\n  pointsAlongRoute = [];\n  indexesOfPointsAlongRoute = [];\n  geoquery1:any;\n  geoquery2:any;\n  geoqueryRoute:any;\n  geofireOriginConfirmed:boolean = false;\n  geofireOriginConfirmedOnRoute:boolean = false\n  geofireDestinationConfirmed:boolean = false;\n  geofireDestinationConfirmedOnRoute:boolean = false;\n  keyTripForGeofireInRouteDest:any;\n  driverIdForGeofireInRouteDest:any;\n  keysIdentifiedInOrigin = [];\n  keysIdentifiedInOriginRoute = [];\n  showRoute:boolean = false;\n  showNearby:boolean = true;\n  constructor(public navParams: NavParams, public navCtrl: NavController,private app:App,public TripsService:TripsService,public loadingCtrl: LoadingController,public toastCtrl: ToastController,public reservesService:reservesService,  private AngularFireAuth: AngularFireAuth,private afDB: AngularFireDatabase, public SignUpService: SignUpService, public sendCoordsService: sendCoordsService,public modalCtrl: ModalController, private geoFireService: geofireService, public alertCtrl: AlertController ) {\n  console.log(\"AQUI EMPIEZA\")\n\n    this.afDB.database.ref('usersTest/' + this.userUid).once('value').then((snap)=>{\n      this.user = snap.val();\n      console.log(this.user);\n      \n  })\n\n    this.latOr = this.navParams.get('latOr');\n    this.lngOr = this.navParams.get('lngOr');\n    this.latDest = this.navParams.get('latDest');\n    this.lngDest = this.navParams.get('lngDest');\n    this.pointsAlongRoute = this.navParams.get('pointsAlongRoute');\n    this.indexesOfPointsAlongRoute = this.navParams.get('indexesOfPointsAlongRoute');\n           \n\n\n        this.reservesService.getReserves( this.userUid).takeUntil(this.unsubscribe)    \n        .subscribe(reserves => {\n          // this.initiatedTrips = [];\n          // this.reservesAvailable = [];\n          \n          this.ReservesGeofire = reserves; \n          console.log(this.ReservesGeofire);\n          \n          if(this.ReservesGeofire.length === 0){\n              //there are no reserves to show\n              this.noReserve = true;\n          }else{\n              //there are reserves\n              this.noReserve = false;  \n          }\n          // this.presentLoadingCustom(this.ReservesGeofire);\n          this.getAvailableReserves();\n\n        });\n\n\n        this.reservesService.getSeenReservesInAvailableReserves( this.userUid).subscribe((reserve)=>{\n          this.reservesAvailable = reserve;\n          console.log(this.reservesAvailable);\n          \n        })\n\n        this.reservesService.getSeenReservesInAvailableReservesRoute( this.userUid).subscribe((reserve)=>{\n          this.routeTrips = reserve;\n          console.log(this.reservesAvailable);\n          \n        })\n  }\n\n \n\n  ionViewDidLeave(){\n    this.unSubscribeServices();\n    \n    console.log(\"me active\")\n    this.TripsService.eliminateAvailableUsers(this.userUid);\n    this.TripsService.eliminateSeenAvailableReserves(this.userUid);\n    this.TripsService.eliminateSeenAvailableReservesRoute(this.userUid);\n\n    // this.TripsService.eliminateSeenAvailableReservesLMU(this.SignUpService.userPlace,this.userUid)\n  }\n\n\n\n      doRefresh(event) {\n        \n        this.afDB.database.ref('allCities/' + this.user.city ).once('value').then((snapGeoquery)=>{\n\n        this.setGeofireOr( snapGeoquery.val().geofireOr, this.latOr, this.lngOr, this.userUid, snapGeoquery.val().geofireDest, this.latDest, this.lngDest);\n        this.indexesOfPointsAlongRoute.forEach(index =>{  \n          this.setGeofireRouteOrigin(snapGeoquery.val().geofireRoute, this.pointsAlongRoute[index].lat, this.pointsAlongRoute[index].lng, snapGeoquery.val().geofireDest, this.latDest, this.lngDest, this.userUid )\n        });\n\n        })\n        \n        setTimeout(() => {\n          this.geoquery1.cancel();\n          this.geoquery2.cancel();\n          this.geoqueryRoute.cancel();\n\n\n          if(this.geofireDestinationConfirmed === false && this.geofireDestinationConfirmedOnRoute === false){\n\n            let alert = this.alertCtrl.create({\n              title: 'No hay nuevos poolers compartiendo sus viajes',\n              subTitle: 'Intenta más tarde',\n              buttons: ['OK']\n            });\n            alert.present();\n\n          }else{\n\n          }\n          event.complete();\n        }, 5000);\n      }\n\n\n\n  getAvailableReserves(){ \n        //bring reserves that i have entered to hide them in listride\n    // this.reservesAvailable = [];\n    //after getting reserve id and driverUid from my own user node, we used them to access the reserve information in the node reserves\n    console.log(this.ReservesGeofire);\n      \n    this.ReservesGeofire.forEach(reserveGeofire => {        \n        this.afDB.database.ref('/reservesTest/'+ reserveGeofire.driverId +'/'+ reserveGeofire.keyReserve).once('value').then((snapReserve)=>{\n          let obj = snapReserve.val();\n          console.log(obj);\n          this.afDB.database.ref('/usersTest/'+ this.userUid +'/reservesSeenInAvailableReserves/').remove().then(()=>{\n            this.afDB.database.ref('/usersTest/'+ this.userUid +'/reservesSeenInAvailableReserves/'+ reserveGeofire.keyReserve).update(obj);\n          })\n        })\n\n        if(reserveGeofire.onRouteDestination == true || reserveGeofire.onRouteOrigin == true){\n          \n          this.afDB.database.ref('/reservesTest/'+reserveGeofire.driverId+'/'+ reserveGeofire.keyReserve).once('value').then((snapTripLMU)=>{\n            let obj = snapTripLMU.val();\n            this.afDB.database.ref('/usersTest/'+ this.userUid +'/reservesSeenInAvailableReservesRoute/').remove().then(()=>{\n              this.afDB.database.ref('/usersTest/'+ this.userUid +'/reservesSeenInAvailableReservesRoute/'+ reserveGeofire.keyReserve).update(obj);\n            })\n            \n             \n          })\n\n      }\n  })\n\n  }\n\n\n  nearby(){\n    console.log('aqui pongo los que estan cerca');\n    this.showRoute = false;\n    this.showNearby = true;\n    \n    \n  }\n\n  route(){\n    console.log('aqui pongo los que estan en ruta');\n    this.showNearby = false;\n    this.showRoute = true;\n  }\n\n\n \n confirmpopup(reserve){\n   this.reservesService.getPendingUsers(reserve.driver.userId,reserve.keyTrip).takeUntil(this.unsubscribe)\n    .subscribe(pendingUsers=>{\n      this.pendingUsers = pendingUsers\n      console.log(pendingUsers);\n     \n      \n    })\n    if( this.pendingUsers === undefined||this.pendingUsers === null){\n      //there is no one in the trip\n      let modal = this.modalCtrl.create('ConfirmpopupPage',{reserve:reserve});\n    modal.onDidDismiss(accepted => {\n        if(accepted){\n          this.unSubscribeServices();\n         this.navCtrl.pop();\n         this.TripsService.eliminateAvailableUsers(this.userUid);\n         this.TripsService.eliminateSeenAvailableReserves(this.userUid);\n         this.TripsService.eliminateSeenAvailableReservesRoute(this.userUid);\n\n        //  this.TripsService.eliminateSeenAvailableReservesLMU(this.SignUpService.userPlace,this.userUid)\n\n         this.navCtrl.push('ReservetripPage');\n        }\n      })\n    modal.present();\n    console.log('no hay nadie')\n    \n    }else if (this.pendingUsers.length >= 4){\n      //the trip is full \n      const toast = this.toastCtrl.create({\n        message: 'Este viaje ya tiene 4 personas reservadas, porfavor selecciona otro',\n        showCloseButton:true,\n        closeButtonText: 'OK',\n        position:'bottom'\n           });\n      toast.present();\n      console.log('menor de 4')\n    \n    }else{\n      console.log(this.pendingUsers.length)\n      //its less of 4 people\n      let modal = this.modalCtrl.create('ConfirmpopupPage',{reserve:reserve});\n    modal.onDidDismiss(accepted => {\n        if(accepted){\n          this.unSubscribeServices();\n         this.navCtrl.pop();\n         this.TripsService.eliminateAvailableUsers(this.userUid);\n         this.TripsService.eliminateSeenAvailableReserves(this.userUid);\n         this.TripsService.eliminateSeenAvailableReservesRoute(this.userUid);\n\n        //  this.TripsService.eliminateSeenAvailableReservesLMU(this.SignUpService.userPlace,this.userUid)\n\n         this.navCtrl.push('ReservetripPage');\n        }\n      })\n    modal.present();\n    console.log('else')\n    }\n\n //IMPORTANTE QUE AL FINAL SE LE COLOQUE QUE SE QUITE CUANDO ACEPTE A ALGUIEN\n  }\n\n\n\n\n  enterTrip(trip){\n   let modal = this.modalCtrl.create('ConfirmtripPage',{trip:trip});\n   modal.onDidDismiss((accepted) => {\n    if(accepted){\n        this.unSubscribeServices();\n        this.navCtrl.pop();\n        this.TripsService.eliminateAvailableUsers(this.userUid);\n        this.TripsService.eliminateSeenAvailableReserves(this.userUid);\n        this.TripsService.eliminateSeenAvailableReservesRoute(this.userUid);\n\n        // this.TripsService.eliminateSeenAvailableReservesLMU(this.SignUpService.userPlace,this.userUid)\n\n        this.navCtrl.push('MyridePage');\n      }\n    })\n    modal.present();\n   //IMPORTANTE QUE AL FINAL SE LE COLOQUE QUE SE QUITE CUANDO ACEPTE A ALGUIEN\n   }\n\n\n\n\n\n\n   unSubscribeServices(){\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n  \n\n\n  help(){\n    const toast = this.toastCtrl.create({\n      message: 'Estos son los conductores que se van a tu misma zona. Podrás ver sus horas en las que se van y unirte en su viaje',\n      showCloseButton:true,\n      closeButtonText: 'OK',\n      position:'top'\n         });\n    toast.present();\n  }\n\n\n\n\n\n  ////////////// GEOQUERYS FUNCTIONS //////////////////\n\n\n  //geoquery origin\n  setGeofireOr( radiusOr:number, latOr, lngOr, userId, radiusDest:number, latDest, lngDest ):void{ \n    let dbRef = this.afDB.database.ref(  '/geofireOr/' );\n    let geoFire = new GeoFire(dbRef); \n  \n    this.geoquery2 = geoFire.query({\n      center: [latOr, lngOr],\n      radius: radiusOr\n    })\n\n      this.keyEnteredOr(radiusDest, latDest, lngDest, userId  );\n      this.keyExitedOr( userId  );\n      \n      console.log('geoquery or added');\n  }\n\n\n  keyEnteredOr(radiusDest, latDest, lngDest,  userId ){\n    // var keyEnteredOr = false;\n    this.geoquery2.on(\"key_entered\", function(key, location, distance){\n      //  console.log(key);\n      //  keyEnteredOr = true;\n       \n       this.geofireOriginConfirmed = true;\n       let orRouteConf = false\n       this.keysIdentifiedInOrigin.push({keyTrip:key, orRouteConf: orRouteConf});\n       \n       if(this.geoquery1){\n\n       }else{\n        this.setGeofireDest(radiusDest, latDest, lngDest, userId);\n       }\n       \n           \n     }.bind(this));\n    }\n  \n  \n    \n    keyExitedOr( userId  ){\n     this.geoquery2.on(\"key_exited\", function(key){\n       this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).remove()\n     }.bind(this))\n    }\n\n    \n\n\n    //geoquery origin in route\n  setGeofireRouteOrigin( radiusRoute:number, lat, lng, radiusDest, latDest, lngDest, userId):void{ \n  \n    let dbRef = this.afDB.database.ref(  '/geofireRoute/' );\n    let geoFire = new GeoFire(dbRef); \n  \n    this.geoqueryRoute = geoFire.query({\n      center: [lat, lng],\n      radius: radiusRoute\n    })\n   \n      this.keyEnteredRouteOrigin( userId, radiusDest, latDest, lngDest );\n      this.keyExitedRouteOrigin( userId  );    \n  \n    console.log('geoquery or added');\n  \n  \n  }\n\n  \n\n\n  keyEnteredRouteOrigin(userId, radiusDest, latDest, lngDest){\n    \n    this.geoqueryRoute.on(\"key_entered\", function(key, location, distance){\n      \n      this.geofireOriginConfirmedOnRoute = true;\n      let orRouteConf = true\n      this.afDB.database.ref('/geofireRoute/' + key ).once('value').then((snap)=>{\n        // quede aqui, para verificar que las key identificadas son iguales\n        let keyTrip = snap.val().keyTrip;\n        this.keysIdentifiedInOriginRoute.push({\n          keyTrip: keyTrip,\n          orRouteConf: orRouteConf\n        })\n\n      }).then(()=>{\n        if(this.geoquery1){\n\n        }else{\n         this.setGeofireDest(radiusDest, latDest, lngDest, userId);\n        }\n      });\n\n    }.bind(this));\n  }\n\n\n  keyExitedRouteOrigin(userId){\n    this.geoquery2.on(\"key_exited\", function(key){\n      this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).remove()\n      \n    }.bind(this))\n    \n  }\n\n\n\n\n  //geoquery destination\n  setGeofireDest( radiusDest:number, latDest, lngDest, userId):void{ \n    console.log('se prendio geoquery destination, debo salir una sóla vez');\n    console.log(this.keysIdentifiedInOrigin);\n    \n    let dbRef = this.afDB.database.ref(  '/geofireDest/' );\n    let geoFire = new GeoFire(dbRef); \n  \n    this.geoquery1 = geoFire.query({\n      center: [latDest, lngDest],\n      radius: radiusDest\n    })\n  \n    \n    this.keyEnteredDest( userId);\n    this.keyExitedDest(userId );\n  \n  console.log('geoquery dest added');\n  }\n\n\n\n  keyEnteredDest( userId ){\n    this.geoquery1.on(\"key_entered\", function(key, location, distance){\n    console.log(key);\n    this.keysIdentifiedInOrigin.forEach(element => {\n      if(element.keyTrip === key){\n        this.geofireDestinationConfirmed = true;\n        this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).update({\n            keyReserve: key,\n          \n           }).then(()=> {\n               return this.afDB.database.ref( '/geofireDest/'+ key).once('value').then((snap) => {\n                this.driverOnNodeDest = snap.val();\n    \n                this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).update({\n                    driverId: this.driverOnNodeDest.driverId\n        \n                })  \n            })\n           }) \n         \n      }\n    });\n\n\n    this.keysIdentifiedInOriginRoute.forEach(element =>{\n      if(element.keyTrip === key){\n        this.geofireDestinationConfirmed = true;\n        this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).once('value')\n        .then((snapshot)=>{\n          if(snapshot.val()){\n\n          }else{\n            this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).update({\n              keyReserve: key,\n              onRouteOrigin: true\n             }).then(()=> {\n                 return this.afDB.database.ref( '/geofireDest/'+ key).once('value').then((snap) => {\n                  this.driverOnNodeDest = snap.val();\n      \n                  this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).update({\n                      driverId: this.driverOnNodeDest.driverId\n          \n                  })  \n              })\n             })\n          }\n        })\n      }\n    })\n    \n  \n   }.bind(this))\n\n\n   this.geoquery1.on(\"ready\", function(){\n      \n      this.afDB.database.ref('allCities/' + this.user.city ).once('value').then((snap)=>{\n        \n        this.indexesOfPointsAlongRoute.forEach(index=>{\n          \n          this.setGeofireRouteDest(snap.val().geofireRoute, this.pointsAlongRoute[index].lat, this.pointsAlongRoute[index].lng, userId);\n\n        })\n      })\n      \n\n    \n  }.bind(this))\n\n\n\n\n }\n \n \n keyExitedDest(userId){\n   \n   this.geoquery1.on(\"key_exited\", function(key){\n     this.afDB.database.ref(  '/usersTest/' + userId + '/availableReserves/' + key).remove()\n   }.bind(this))\n }\n\n\n\n  //geoquery destination in route\n  setGeofireRouteDest( radius:number, lat, lng, userId ):void{ \n    let dbRef = this.afDB.database.ref(  '/geofireRoute/' );\n    let geoFire = new GeoFire(dbRef); \n  \n    this.geoqueryRoute = geoFire.query({\n      center: [lat, lng],\n      radius: radius\n    })\n   \n      this.keyEnteredRouteDest( userId );\n      this.keyExitedRouteDest( userId  );        \n  }\n\n  \n\n\n\n\n  keyEnteredRouteDest(userId){\n\n    this.geoqueryRoute.on(\"key_entered\", function(key, location, distance){\n      \n      this.afDB.database.ref('/geofireRoute/' + key ).once('value').then((snap)=>{\n        this.keyTripForGeofireInRouteDest = snap.val().keyTrip;\n        this.driverIdForGeofireInRouteDest = snap.val().driverId;\n      }).then(()=>{\n\n        this.keysIdentifiedInOrigin.forEach(element => {\n          if(element.keyTrip === this.keyTripForGeofireInRouteDest){\n            this.geofireDestinationConfirmedOnRoute = true;\n            \n            this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + this.keyTripForGeofireInRouteDest).once('value')\n            .then((snapConf)=>{\n              if(snapConf.val()){\n                console.log('te voy a dejar relajado ya que ya te identifiqué');\n\n              }else{\n\n                this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + this.keyTripForGeofireInRouteDest).update({\n                  keyReserve: this.keyTripForGeofireInRouteDest,\n                  driverId: this.driverIdForGeofireInRouteDest,\n                  onRouteDestination: true,\n                 })\n\n              }\n            })\n             \n          }\n        });\n  \n  \n        this.keysIdentifiedInOriginRoute.forEach(element =>{\n          if(element.keyTrip === this.keyTripForGeofireInRouteDest){\n            this.geofireDestinationConfirmedOnRoute = true;\n\n            this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + this.keyTripForGeofireInRouteDest).once('value')\n                .then((snapConf)=>{\n                  if(snapConf.val()){\n                    console.log('te voy a dejar relajado ya que ya te identifiqué');  \n                  }else{\n                    this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + this.keyTripForGeofireInRouteDest).update({\n                      keyReserve: this.keyTripForGeofireInRouteDest,\n                      driverId: this.driverIdForGeofireInRouteDest,\n                      onRouteDestination: true,\n                      onRouteOrigin: true\n                     })\n\n                  }\n                })\n\n          }\n        })\n      \n      })\n              \n    }.bind(this))\n\n  }\n\n\n  keyExitedRouteDest(userId){\n    this.geoquery2.on(\"key_exited\", function(key){\n\n      this.afDB.database.ref(  '/usersTest/' + userId + '/availableReserves/' + key).remove()\n\n    }.bind(this))\n    \n  }\n\n\n  \n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/p-listride/listride.ts"],"sourceRoot":""}