{"version":3,"sources":["../../src/pages/confirmprice/driverConfirmprice.module.ts","../../src/pages/confirmprice/driverConfirmprice.ts"],"names":[],"mappings":"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","file":"53.js","sourcesContent":["\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { DriverConfirmpricePage } from './driverConfirmprice';\n \n@NgModule({\n  declarations: [\n    DriverConfirmpricePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(DriverConfirmpricePage),\n  ],\n  exports: [\n    DriverConfirmpricePage\n  ]\n})\nexport class DriverConfirmpricePageModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/confirmprice/driverConfirmprice.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { NavController, ViewController, ModalController, NavParams, Tabs, AlertController, App, IonicPage } from 'ionic-angular';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { DriverSignUpService } from '../../services/d-signup.service';\nimport { DriverSendCoordsService } from '../../services/d-sendCoords.service';\n\nimport { DriverSendUsersService } from '../../services/d-sendUsers.service';\nimport { DriverPriceService } from '../../services/d-price.service';\nimport { DriverGeofireService } from '../../services/d-geofire.services';\nimport { Subscription, Subject, Subscriber } from 'rxjs';\nimport * as moment from 'moment';\nimport { DriverMetricsService } from '../../services/d-metrics.service';\n\n\ndeclare var google;\n@IonicPage()\n\n@Component({\n  selector: 'driver-page-confirmprice',\n  templateUrl: 'driverConfirmprice.html'\n})\nexport class DriverConfirmpricePage {\n  \n  accepted: boolean;\n\n  precio:string;\n  userDriverUid=this.AngularFireAuth.auth.currentUser.uid\n  //variable for get data in function\n  driver:any ={};\n  // variable to get data on constructor\n  driver2:any;\n  //variable to transfer data from driver to this one\n  driverInfo:any ={};\n  driverInfoNote:any ={};\n  lat;\n  lng;\n\n  geoInfo1;\n  geoInfo2;\n  location;\n  buttonColor:string = '#0fc874';\n  buttonColor2:string = '#0fc874';\n  unsubscribe = new Subject;\n  carModelList:any=[];\n  car:string;\n\n  hour:any;\n  nowHour:any = new Date();\n  hourToSend:any;\n\n   //geocoder variable\n   geocoder: any\n   geocoordinatesDest:any ={};\n   geocoordinatesOr:any ={};\n   destination:any;\n   origin:any;\n   destinationNote:any;\n   originNote:any;\n\n   // variables for reserve\n   goefireKey:any;\n   typeOfReserve:any;\n   reserve:any;\n   startHour:any;\n   reservesAlreadyCreated:any;\n   houseAddress:any;\n   placeAddress:any;\n   schedules = [];\n   keyReserve:any;\n  constructor(public navCtrl: NavController, public appCtrl: App, private MetricsService:DriverMetricsService , public PriceService:DriverPriceService,public alertCtrl: AlertController,private afDB: AngularFireDatabase,public sendUsersService: DriverSendUsersService, public SignUpService: DriverSignUpService, public sendCoordsService: DriverSendCoordsService,public modalCtrl: ModalController, private AngularFireAuth: AngularFireAuth, public viewCtrl:ViewController,public navParams: NavParams, private geofireService: DriverGeofireService) {\n\n    this.keyReserve = this.navParams.get('keyReserve');\n\n    this.SignUpService.getCar(this.userDriverUid).takeUntil(this.unsubscribe)\n    .subscribe( car => {\n      //get cars registered\n      this.carModelList = car;\n      console.log(this.carModelList)\n    });\n    \n    this.geocoder = new google.maps.Geocoder;\n  }\n\n  ionViewDidEnter(){\n    //  this.geofireService.cancelGeoqueryPlace();\n    }\n  \n   \n\n    setPriceDriver(){\n      if(this.precio == null || this.precio == '' || this.car == null || this.car==''){\n                const alert = this.alertCtrl.create({\n                    title: 'Informacion Incompleta',\n                    subTitle: 'No haz colocado el precio por el que estas dispuesto a compatir tu viaje o no haz especificado en que carro te moverÃ¡s',\n                    buttons: ['OK']\n                  });\n                  alert.present();\n            }else{\n              this.PriceService.setPrice(this.userDriverUid,this.precio,this.car, this.keyReserve);\n              this.accepted = true;\n              this.unsubscribe.next();\n              this.unsubscribe.complete();\n              this.viewCtrl.dismiss(this.accepted);\n\n\n              // HERE YOU ARE, DOUCHEBAG\n\n\n\n\n              //ESTO SE HARA AHORA EN LA PARTE DE HORARIO\n              // this.afDB.database.ref( '/driversTest/' + this.userDriverUid + '/schedule/').once('value').then((snapSchedule)=>{\n              //   let obj = snapSchedule.val();\n              //   console.log(obj);\n              //   Object.getOwnPropertyNames(obj).forEach((key)=>{\n              //     if(obj[key].type === 'origin'){\n              //       this.afDB.database.ref(this.SignUpService.userPlace + '/reserves/'+ this.userDriverUid).push({\n              //         driver: this.driverInfo,\n              //         car:this.car,\n              //         houseAddr: this.driver.houseAddress.name,\n              //         placeAddr: this.driverInfo.placeAddr,\n              //         price:this.precio,\n              //         startHour: obj[key].hour,\n              //         type: obj[key].type,\n                       \n              \n              //     }).then((snap1)=>{\n              //       const key1 = snap1.key;\n                    // this.MetricsService.createdReserves(this.driverInfo,this.car,this.navParams.data.houseAddr[0],this.navParams.data.placeAddr,this.precio, sche.,this.typeOfReserve);\n            \n              //      // set geofireOrkey \n              //      this.geofireService.setGeofireOrNEWTEST(this.SignUpService.userPlace, key1, this.driver.houseAddress.coordinates.lat, this.driver.houseAddress.coordinates.lng );\n              //      this.afDB.database.ref(this.SignUpService.userPlace + '/geofireOr/' + key1).update({\n              //         driverId: this.driverInfo.userId\n              //      })\n              //      console.log('executed geofire Or');\n                  \n              //         this.afDB.database.ref(this.SignUpService.userPlace + '/reserves/'+ this.userDriverUid + '/' + key1).update({\n              //             keyTrip: key1 \n              //         }) \n\n              //         this.accepted = true;\n              //         this.unsubscribe.next();\n              //         this.unsubscribe.complete();\n              //         this.viewCtrl.dismiss(this.accepted);\n\n              //     })\n              //     }else{\n              //       this.afDB.database.ref(this.SignUpService.userPlace + '/reserves/'+ this.userDriverUid).push({\n              //         driver: this.driverInfo,\n              //         car:this.driver.trips.car,\n              //         houseAddr: this.driver.houseAddress.name,\n              //         placeAddr: this.driverInfo.placeAddr,\n              //         price:this.precio,\n              //         startHour: obj[key].hour,\n              //         type: obj[key].type,\n              \n              //     }).then((snap2)=>{\n              //       const key2 = snap2.key;\n              //       // this.MetricsService.createdReserves(this.SignUpService.userPlace,this.driverInfo,this.car,this.navParams.data.houseAddr[0],this.navParams.data.placeAddr,this.precio, sche.,this.typeOfReserve);\n            \n              //      // set geofireOrkey \n              //      this.geofireService.setGeofireDestNEWTEST(this.SignUpService.userPlace, key2, this.driver.houseAddress.coordinates.lat, this.driver.houseAddress.coordinates.lng );\n              //      this.afDB.database.ref(this.SignUpService.userPlace + '/geofireDest/' + key2).update({\n              //         driverId: this.driverInfo.userId\n              //      })\n              //      console.log('executed geofire Dest')\n                  \n              \n              \n              //         this.afDB.database.ref(this.SignUpService.userPlace + '/reserves/'+ this.userDriverUid + '/' + key2).update({\n              //             keyTrip: key2 \n              //         }) \n              //         this.accepted = true;\n              //         this.unsubscribe.next();\n              //         this.unsubscribe.complete();\n              //         this.viewCtrl.dismiss(this.accepted);\n\n              //     })                    \n              //     }\n                  \n              //   })\n                \n              // })\n           }\n\n     \n}; \n        \n  dismiss() {\n     // this.unsubscribe.next();\n    // this.unsubscribe.unsubscribe();\n    this.afDB.database.ref('/geofireRoute/').once('value').then(snap =>{\n      let obj = snap.val();\n\n      Object.getOwnPropertyNames(obj).forEach(key =>{\n        console.log(obj[key]);\n        \n        // if(obj[key].keyTrip === this.keyReserve){\n        //   this.geofireService.deleteUserGeofireRoute(obj[key]);\n        // }\n      })\n    })\n    this.geofireService.deleteUserGeofireDest(this.keyReserve);\n    this.geofireService.deleteUserGeofireOr(this.keyReserve);\n    this.geofireService.deleteUserReserve(this.userDriverUid, this.keyReserve);\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  \n    this.viewCtrl.dismiss();\n\n  }  \n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/confirmprice/driverConfirmprice.ts"],"sourceRoot":""}