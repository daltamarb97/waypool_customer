{"version":3,"sources":["../../src/pages/p-signup/signup.module.ts","../../src/pages/p-signup/signup.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AACyC;AACO;AACV;AAatC;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAX5B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAU;aACX;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,2DAAU,CAAC;aACrC;YACD,OAAO,EAAE;gBACP,2DAAU;aACX;SACF,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfwB;AAG4B;AAEpB;AACM;AACe;AACnB;AACf;AACR;AACY;AAErB;AAW/B;IA6BE,oBAAmB,OAAsB,EAAU,IAAyB,EAAU,WAAwB,EAAU,qBAA4C,EAAU,aAA4B,EAAU,SAA0B,EAAU,eAAgC,EAAS,SAAoB,EAAU,GAAQ,EAAS,WAA8B;QAA9W,iBA4BC;QA5BkB,YAAO,GAAP,OAAO,CAAe;QAAU,SAAI,GAAJ,IAAI,CAAqB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,0BAAqB,GAArB,qBAAqB,CAAuB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,cAAS,GAAT,SAAS,CAAiB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAS,cAAS,GAAT,SAAS,CAAW;QAAU,QAAG,GAAH,GAAG,CAAK;QAAS,gBAAW,GAAX,WAAW,CAAmB;QA1B5W,SAAI,GAAM,EAAE,CAAC;QACb,YAAO,GAAO,EAAE,CAAC;QACjB,WAAM,GAAO,EAAE,CAAC;QAChB,eAAU,GAAG,IAAI,CAAC;QASlB,WAAM,GAAG,EAAE,CAAC;QACZ,gBAAW,GAAG,EAAE,CAAC;QAIjB,sBAAiB,GAAW,KAAK,CAAC;QAElC,oBAAe,GAAW,KAAK,CAAC;QAChC,uBAAkB,GAAW,KAAK,CAAC;QACnC,gBAAW,GAAG,IAAI,6CAAO,CAAC;QAG1B,UAAK,GAAG,EAAE,CAAC;QAIX,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAG/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,IAAI,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC/B,QAAQ,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YACnC,KAAK,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YACnC,YAAY,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YACvC,KAAK,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAChC,IAAI,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC/B,SAAS,EAAC,CAAC,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;SAExC,CAAC;QAGF,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QAGzC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;YAC3E,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,CAAC,CAAC;IAGJ,CAAC;IAEF,6BAAQ,GAAR;QAEO,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,kGAAkG;QAClG,4BAA4B;QAE5B,uDAAuD;QACvD,iDAAiD;QACjD,yCAAyC;QAGzC,SAAS;QACT,OAAO;QAEP,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;IAErE,CAAC;IAGE,wCAAwC;IACxC,gCAAgC;IAChC,sDAAsD;IACtD,gDAAgD;IAChD,oDAAoD;IACpD,iHAAiH;IACjH,iJAAiJ;IACjJ,kCAAkC;IAClC,oBAAoB;IACpB,kCAAkC;IAClC,YAAY;IAEZ,QAAQ;IACR,IAAI;IAIR,8BAAS,GAAT;QACI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC;IAAA,CAAC;IAGF,0BAAK,GAAL;QACI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC;IAED,iCAAY,GAAZ;QAAA,iBAmVC;QAlVG,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YAClC,OAAO,EAAE,UAAU;YACnB,OAAO,EAAE,0IAGA;SACN,CAAC,CAAC;QACP,OAAO,CAAC,OAAO,EAAE,CAAC;QACpB,8BAA8B;QAC9B,kCAAkC;QAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAErC,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QACpC,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,KAAK,EAAE,CAAC,EAAE,EAAC,CAAC;YAEvB,EAAE,EAAC,IAAI,CAAC,eAAe,KAAK,KAAK,IAAI,IAAI,CAAC,iBAAiB,KAAK,KAAK,IAAI,IAAI,CAAC,kBAAkB,KAAK,KAAK,CAAC,EAAC;gBAC5G,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;gBAC1C,EAAE,EAAC,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC,CAAC,EAAC;oBAClC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;oBAC5B,EAAE,EAAC,IAAI,CAAC,YAAY,KAAK,UAAU,CAAC,EAAC;wBACjC,EAAE,EAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,KAAK,IAAK,CAAC,EAAC;4BACxD,OAAO,CAAC,OAAO,EAAE,CAAC;4BAClB,IAAM,OAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gCAChC,KAAK,EAAE,8CAA8C;gCACrD,QAAQ,EAAE,6EAA6E;gCACvF,OAAO,EAAE,CAAC,IAAI,CAAC;6BAClB,CAAC,CAAC;4BACH,OAAK,CAAC,OAAO,EAAE,CAAC;wBACpB,CAAC;wBAAA,IAAI,EAAC;4BACE,2BAA2B;4BAC3B,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;4BACvD,IAAI,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;4BAC/D,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK;4BACxD,IAAI,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;4BAC/D,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;4BAEjE,0BAA0B;4BAEtB,IAAI,CAAC,IAAI,GAAG;gCACR,IAAI,EAAE,QAAQ;gCACd,QAAQ,EAAE,YAAY;gCACtB,KAAK,EAAE,SAAS;gCAChB,KAAK,EAAE,KAAK,GAAC,SAAS;gCACtB,SAAS,EAAE,UAAU;gCACrB,qDAAqD;gCACrD,yBAAyB;gCACzB,IAAI,EAAE,IAAI,CAAC,OAAO;gCAClB,uCAAuC;gCACvC,SAAS,EAAC;oCACN,OAAO,EAAE,IAAI;oCACb,EAAE,EAAE,IAAI;iCACX;6BACJ,CAAC;4BAIE,4CAA4C;4BAG5C,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,EAAC;gCAChG,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC,IAAI,CAAC;oCAEvE,EAAE,EAAC,CAAC,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAC;wCAClB,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB,CAAC,UAAC,IAAI;4CAC9C,EAAE,EAAC,IAAI,CAAC,EAAC;gDACD,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAC,KAAK;oDAC7B,KAAI,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gDAC1B,CAAC,CAAC;gDACN,EAAE,EAAC,CAAC,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAC;oDAClB,KAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;gDAChC,CAAC;gDAED,+BAA+B;gDAE3B,8CAA8C;gDAC9C,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;gDAC3C,sCAAsC;gDACtC,KAAI,CAAC,aAAa,CAAC,kBAAkB,CAAE,IAAI,CAAC,GAAG,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;gDAEnE,KAAK;gDAEL,+HAA+H;gDAC/H,+BAA+B;gDAE/B,uCAAuC;gDACvC,wHAAwH;gDACxH,sGAAsG;gDACtG,8EAA8E;gDAC9E,SAAS;gDAET,gBAAgB;gDAChB,mFAAmF;gDACnF,KAAK;gDAEL,6BAA6B;gDAC7B,+CAA+C;4CAEnD,CAAC;4CAAA,IAAI,EAAC;gDACF,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;4CACpC,CAAC;wCACL,CAAC,CAAC;oCACN,CAAC;oCAAA,CAAC;oCAEF,4EAA4E;oCAC5E,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB,CAAC,UAAC,IAAI;wCAC9C,EAAE,EAAC,IAAI,CAAC,EAAC;4CACL,EAAE,EAAC,IAAI,CAAC,aAAa,IAAI,KAAK,CAAC,EAAC;gDAC5B,IAAI,CAAC,qBAAqB,EAAE,CAAC;gDAC7B,OAAO,CAAC,OAAO,EAAE,CAAC;gDAClB,IAAM,OAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oDAChC,KAAK,EAAE,oBAAoB;oDAC3B,QAAQ,EAAE,0EAA0E;oDACpF,OAAO,EAAE;wDACL;4DACI,IAAI,EAAE,IAAI;4DACV,OAAO,EAAE;gEAED,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;4DAC3D,CAAC;yDACJ;qDACJ;iDACJ,CAAC,CAAC;gDACH,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;gDAC/B,OAAK,CAAC,OAAO,EAAE,CAAC;gDACpB,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;4CAChD,CAAC;4CAAA,IAAI,EAAC;gDACF,OAAO,CAAC,GAAG,CAAC,uEAAuE,CAAC,CAAC;4CACzF,CAAC;wCACL,CAAC;wCAAA,IAAI,EAAC;4CACF,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;wCACpC,CAAC;oCACL,CAAC,CAAC;gCAEN,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oCACX,OAAO,CAAC,OAAO,EAAE,CAAC;oCAClB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oCAEnB,EAAE,EAAC,KAAK,CAAC,IAAI,KAAK,2BAA2B,CAAC,EAAC;wCAC3C,IAAM,OAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4CAChC,KAAK,EAAE,sCAAsC;4CAC7C,QAAQ,EAAE,oKAAoK;4CAC9K,OAAO,EAAE,CAAC,IAAI,CAAC;yCAClB,CAAC,CAAC;wCACH,OAAK,CAAC,OAAO,EAAE,CAAC;oCACpB,CAAC;gCACL,CAAC,CAAC;4BAEN,CAAC;4BAAA,IAAI,EAAC;gCACF,OAAO,CAAC,OAAO,EAAE,CAAC;gCAClB,IAAM,OAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oCAChC,KAAK,EAAE,OAAO;oCACd,QAAQ,EAAE,gDAAgD;oCAC1D,OAAO,EAAE,CAAC,IAAI,CAAC;iCAClB,CAAC,CAAC;gCACH,OAAK,CAAC,OAAO,EAAE,CAAC;4BACpB,CAAC;wBAGT,CAAC;oBACL,CAAC;oBAAA,IAAI,EAAC;wBAEF,OAAO,CAAC,OAAO,EAAE,CAAC;wBAClB,IAAM,OAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4BAChC,KAAK,EAAE,iEAAiE;4BACxE,QAAQ,EAAE,wGAAwG;4BAClH,OAAO,EAAE,CAAC,IAAI,CAAC;yBAClB,CAAC,CAAC;wBACH,OAAK,CAAC,OAAO,EAAE,CAAC;oBAEpB,CAAC;gBAEL,CAAC;gBAAA,IAAI,EAAC;oBACF,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;oBAC9B,EAAE,EAAC,IAAI,CAAC,YAAY,KAAK,MAAM,CAAC,EAAC;wBAC7B,EAAE,EAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,KAAK,IAAK,CAAC,EAAC;4BACxD,OAAO,CAAC,OAAO,EAAE,CAAC;4BAClB,IAAM,OAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gCAChC,KAAK,EAAE,8CAA8C;gCACrD,QAAQ,EAAE,6EAA6E;gCACvF,OAAO,EAAE,CAAC,IAAI,CAAC;6BAClB,CAAC,CAAC;4BACH,OAAK,CAAC,OAAO,EAAE,CAAC;wBACpB,CAAC;wBAAA,IAAI,EAAC;4BACE,2BAA2B;4BAC3B,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;4BACvD,IAAI,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;4BAC/D,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK;4BACxD,IAAI,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;4BAC/D,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;4BAEjE,0BAA0B;4BAEtB,IAAI,CAAC,IAAI,GAAG;gCACR,IAAI,EAAE,QAAQ;gCACd,QAAQ,EAAE,YAAY;gCACtB,KAAK,EAAE,SAAS;gCAChB,KAAK,EAAE,KAAK,GAAC,SAAS;gCACtB,SAAS,EAAE,UAAU;gCACrB,qDAAqD;gCACrD,yBAAyB;gCACzB,IAAI,EAAE,IAAI,CAAC,OAAO;gCAClB,uCAAuC;gCACvC,SAAS,EAAC;oCACN,OAAO,EAAE,IAAI;oCACb,EAAE,EAAE,IAAI;iCACX;6BACJ,CAAC;4BAIE,4CAA4C;4BAG5C,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,EAAC;gCAChG,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC,IAAI,CAAC;oCAEvE,EAAE,EAAC,CAAC,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAC;wCAClB,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB,CAAC,UAAC,IAAI;4CAC9C,EAAE,EAAC,IAAI,CAAC,EAAC;gDACD,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAC,KAAK;oDAC7B,KAAI,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gDAC1B,CAAC,CAAC;gDACN,EAAE,EAAC,CAAC,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAC;oDAClB,KAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;gDAChC,CAAC;gDAED,+BAA+B;gDAE3B,8CAA8C;gDAC9C,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;gDAC3C,sCAAsC;gDACtC,KAAI,CAAC,aAAa,CAAC,kBAAkB,CAAE,IAAI,CAAC,GAAG,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;gDAEnE,KAAK;gDAEL,+HAA+H;gDAC/H,+BAA+B;gDAE/B,uCAAuC;gDACvC,wHAAwH;gDACxH,sGAAsG;gDACtG,8EAA8E;gDAC9E,SAAS;gDAET,gBAAgB;gDAChB,mFAAmF;gDACnF,KAAK;gDAEL,6BAA6B;gDAC7B,+CAA+C;4CAEnD,CAAC;4CAAA,IAAI,EAAC;gDACF,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;4CACpC,CAAC;wCACL,CAAC,CAAC;oCACN,CAAC;oCAAA,CAAC;oCAEF,4EAA4E;oCAC5E,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB,CAAC,UAAC,IAAI;wCAC9C,EAAE,EAAC,IAAI,CAAC,EAAC;4CACL,EAAE,EAAC,IAAI,CAAC,aAAa,IAAI,KAAK,CAAC,EAAC;gDAC5B,IAAI,CAAC,qBAAqB,EAAE,CAAC;gDAC7B,OAAO,CAAC,OAAO,EAAE,CAAC;gDAClB,IAAM,OAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oDAChC,KAAK,EAAE,oBAAoB;oDAC3B,QAAQ,EAAE,0EAA0E;oDACpF,OAAO,EAAE;wDACL;4DACI,IAAI,EAAE,IAAI;4DACV,OAAO,EAAE;gEAED,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;4DAC1C,CAAC;yDACJ;qDACJ;iDACJ,CAAC,CAAC;gDACH,OAAK,CAAC,OAAO,EAAE,CAAC;gDAChB,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;gDACnC,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;4CAChD,CAAC;4CAAA,IAAI,EAAC;gDACF,OAAO,CAAC,GAAG,CAAC,uEAAuE,CAAC,CAAC;4CACzF,CAAC;wCACL,CAAC;wCAAA,IAAI,EAAC;4CACF,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;wCACpC,CAAC;oCACL,CAAC,CAAC;gCAEN,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oCACX,OAAO,CAAC,OAAO,EAAE,CAAC;oCAClB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oCAEnB,EAAE,EAAC,KAAK,CAAC,IAAI,KAAK,2BAA2B,CAAC,EAAC;wCAC3C,IAAM,OAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4CAChC,KAAK,EAAE,sCAAsC;4CAC7C,QAAQ,EAAE,oKAAoK;4CAC9K,OAAO,EAAE,CAAC,IAAI,CAAC;yCAClB,CAAC,CAAC;wCACH,OAAK,CAAC,OAAO,EAAE,CAAC;oCACpB,CAAC;gCACL,CAAC,CAAC;4BAEN,CAAC;4BAAA,IAAI,EAAC;gCACF,OAAO,CAAC,OAAO,EAAE,CAAC;gCAClB,IAAM,OAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oCAChC,KAAK,EAAE,OAAO;oCACd,QAAQ,EAAE,gDAAgD;oCAC1D,OAAO,EAAE,CAAC,IAAI,CAAC;iCAClB,CAAC,CAAC;gCACH,OAAK,CAAC,OAAO,EAAE,CAAC;4BACpB,CAAC;wBAGT,CAAC;oBACL,CAAC;oBAAA,IAAI,EAAC;wBACF,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;wBAC9B,OAAO,CAAC,OAAO,EAAE,CAAC;wBAClB,IAAM,QAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4BAChC,KAAK,EAAE,2DAA2D;4BAClE,QAAQ,EAAE,iGAAiG;4BAC3G,OAAO,EAAE,CAAC,IAAI,CAAC;yBAClB,CAAC,CAAC;wBACH,QAAK,CAAC,OAAO,EAAE,CAAC;oBAEpB,CAAC;gBAEL,CAAC;gBACD,OAAO,CAAC,OAAO,EAAE,CAAC;gBAClB,mCAAmC;YAEnC,CAAC;YAAA,IAAI,EAAC;YAEN,CAAC;QACL,CAAC;IAEL,CAAC;IAGD,yCAAoB,GAApB,UAAqB,MAAM;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,wBAAwB,EAAE,EAAC,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;IACtE,CAAC;IAED,oCAAe,GAAf;QACI,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IAE9B,CAAC;IApcqB;QAAnB,yEAAS,CAAC,8DAAO,CAAC;kCAAU,8DAAO;+CAAC;IAF5B,UAAU;QAJtB,wEAAS,CAAC;YACT,QAAQ,EAAE,aAAa;WACG;SAC3B,CAAC;mBA8B8W;OA7BnW,UAAU,CAwctB;IAAD,CAAC;AAAA;SAxcY,UAAU,e","file":"29.js","sourcesContent":["\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { SignupPage } from './signup';\r\n \r\n@NgModule({\r\n  declarations: [\r\n    SignupPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(SignupPage),\r\n  ],\r\n  exports: [\r\n    SignupPage\r\n  ]\r\n})\r\nexport class SignupPageModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/p-signup/signup.module.ts","\r\nimport { Component, ViewChild } from '@angular/core';\r\n\r\n\r\nimport { NavController, NavParams, IonicPage, App, LoadingController } from 'ionic-angular';\r\n\r\nimport { AngularFireDatabase } from '@angular/fire/database';\r\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport { authenticationService } from '../../services/userauthentication.service';\r\nimport { SignUpService } from '../../services/signup.services';\r\nimport { AlertController } from 'ionic-angular';\r\nimport { Content } from 'ionic-angular';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport * as firebase from 'firebase';\r\nimport { Subject } from 'rxjs';\r\n\r\n\r\ndeclare var google;\r\n\r\n@IonicPage()\r\n\r\n@Component({\r\n  selector: 'page-signup',\r\n  templateUrl: 'signup.html'\r\n})\r\nexport class SignupPage {\r\n\r\n    @ViewChild(Content) content: Content;\r\n    user:any ={};\r\n    tokenId:any = '';\r\n    userId:any = '';\r\n    isReadonly = true;\r\n    private signupGroup: FormGroup;\r\n    fixedemail:any;\r\n\r\n    //variables linked among them \r\n    emailVar:any;\r\n    cityVar:any;\r\n    companyVar:any;\r\n    company:any;\r\n    cities = [];\r\n    arrayEmails = [];\r\n    email:any;\r\n    // noShowButton:boolean = false;\r\n    geocoder: any\r\n    corpEmailDetected:boolean = false;\r\n    forLoopsCompleted:any;\r\n    emailIdentified:boolean = false;\r\n    successfulRegister:boolean = false;\r\n    unsubscribe = new Subject;\r\n    emailStringVerification:any;\r\n    rightEmailOnDatabase:any;\r\n    zones = [];\r\n    typeOfSignUp:any;\r\n  constructor(public navCtrl: NavController, private afDB: AngularFireDatabase, private formBuilder: FormBuilder, private authenticationService: authenticationService, private SignUpService: SignUpService, public  alertCtrl: AlertController, private AngularFireAuth: AngularFireAuth, public navParams: NavParams, private app: App, public loadingCtrl: LoadingController) {\r\n     \r\n    this.typeOfSignUp = this.navParams.get('typeOfSignUp');\r\n    console.log(this.typeOfSignUp);\r\n    \r\n\r\n    this.signupGroup = this.formBuilder.group({\r\n        name: [\"\", Validators.required],\r\n        lastname: [\"\", Validators.required],\r\n        email: [\"\", Validators.required],\r\n        password: [\"\", Validators.required],\r\n        passwordconf: [\"\", Validators.required],\r\n        phone: [\"\", Validators.required], \r\n        city: [\"\", Validators.required],\r\n        isChecked:[true, Validators.required]\r\n        \r\n    })\r\n\r\n\r\n    this.geocoder = new google.maps.Geocoder;\r\n\r\n\r\n    this.SignUpService.getAllCities().takeUntil(this.unsubscribe).subscribe((cities)=>{\r\n        this.cities = cities;\r\n        console.log(this.cities);\r\n    })\r\n\r\n\r\n  }\r\n\r\n onChange(){\r\n\r\n        this.arrayEmails = [];\r\n        // this.afDB.database.ref('allCities/' + this.cityVar + '/allPlaces').once('value').then((snap)=>{\r\n        //     let obj = snap.val();\r\n    \r\n        //     Object.getOwnPropertyNames(obj).forEach((key)=>{\r\n        //         this.arrayEmails.push(obj[key].email);\r\n        //         console.log(this.arrayEmails);\r\n                \r\n                \r\n        //     })\r\n        // })  \r\n\r\n        this.arrayEmails.push('@gmail.com', '@hotmail.com', '@yahoo.com');\r\n            \r\n     }\r\n\r\n\r\n        // noCompanyIdentified(numberToExecute){\r\n        //     ++this.forLoopsCompleted;\r\n        //     if(this.forLoopsCompleted === numberToExecute){\r\n        //         if(this.companyIdentified === false){\r\n        //             const alert = this.alertCtrl.create({\r\n        //                 title: 'El correo que ingresaste no concuerda con el de ninguna empresa de la red de Waypool',\r\n        //                 subTitle: 'Revisa si escribiste el correo bien o si tu empresa no está en Waypool, envianos un correo a waypooltec@gmail.com',\r\n        //                 buttons: ['OK']\r\n        //               });\r\n        //               alert.present(); \r\n        //         }\r\n                \r\n        //     }\r\n        // }\r\n    \r\n\r\n\r\n    scrolling(){\r\n        this.content.scrollTo(30, 0);\r\n    };\r\n\r\n\r\n    login(){\r\n        this.navCtrl.setRoot('LoginPage');\r\n    }\r\n     \r\n    verification(){\r\n        this.emailIdentified = false;\r\n        this.corpEmailDetected = false;\r\n        this.successfulRegister = false;\r\n        let loading = this.loadingCtrl.create({\r\n            spinner: 'crescent',\r\n            content: `\r\n              <div class=\"custom-spinner-container\">\r\n                <div class=\"custom-spinner-box\"></div>\r\n              </div>`\r\n              });\r\n          loading.present(); \r\n        // this.forLoopsCompleted = 0;\r\n        // this.companyIdentified = false;\r\n        console.log(this.arrayEmails.length);\r\n        \r\n        var count = this.arrayEmails.length;\r\n        for(var i=0; i<count; i++){\r\n    \r\n            if(this.emailIdentified === false && this.corpEmailDetected === false && this.successfulRegister === false){\r\n            this.emailStringVerification = this.email.indexOf(this.arrayEmails[i]);\r\n            console.log(this.emailStringVerification);\r\n            if(this.emailStringVerification > -1){\r\n                this.emailIdentified = true;\r\n                if(this.typeOfSignUp === 'personal'){\r\n                    if(!this.signupGroup.controls['isChecked'].value === true ){\r\n                        loading.dismiss();\r\n                        const alert = this.alertCtrl.create({\r\n                            title: 'No aceptaste nuestros términos y condiciones',\r\n                            subTitle: 'Debes estar de acuerdo con nustros términos y condiciones para usar Waypool',\r\n                            buttons: ['OK']\r\n                        });\r\n                        alert.present(); \r\n                    }else{\r\n                            //creating user on firebase\r\n                            let userName = this.signupGroup.controls['name'].value;\r\n                            let userLastName = this.signupGroup.controls['lastname'].value;\r\n                            let userEmail = this.signupGroup.controls['email'].value \r\n                            let userPassword = this.signupGroup.controls['password'].value;\r\n                            let userPhone = this.signupGroup.controls['phone'].value;\r\n                        \r\n                    // saving data in variable\r\n                   \r\n                        this.user = {\r\n                            name: userName,\r\n                            lastname: userLastName,\r\n                            email: userEmail,\r\n                            phone: '+57'+userPhone,\r\n                            createdBy: 'costumer',\r\n                            // PREGUNTARLE SOBRE QUÉ EMPRESA TRABAJA MÁS ADELANTE\r\n                            // company: this.company,\r\n                            city: this.cityVar,\r\n                            //this sets documents true by default//\r\n                            documents:{\r\n                                license: true,\r\n                                id: true\r\n                            }\r\n                        };\r\n                    \r\n\r\n                \r\n                            // this.SignUpService.userPlace = userPlace;\r\n                                \r\n                \r\n                            if(this.signupGroup.controls['password'].value === this.signupGroup.controls['passwordconf'].value){\r\n                                this.authenticationService.registerWithEmail(userEmail, userPassword).then(()=>{\r\n\r\n                                    if(!this.user.userId){\r\n                                        this.AngularFireAuth.auth.onAuthStateChanged((user)=>{\r\n                                            if(user){\r\n                                                    user.getIdToken().then((token)=>{\r\n                                                    this.user.tokenId = token;\r\n                                                    })\r\n                                                if(!this.user.userId){\r\n                                                    this.user.userId = user.uid;\r\n                                                }\r\n\r\n                                                // this.zones.forEach(zone => {\r\n\r\n                                                    //CAMBIAR  EN PRODUCCION - REGLAS DE SEGURIDAD\r\n                                                    this.SignUpService.saveUserTest(this.user);\r\n                                                    //no se si esto es necesario - REVISAR\r\n                                                    this.SignUpService.saveUserInAllUsers( user.uid, this.cityVar);\r\n\r\n                                                // })\r\n\r\n                                                // this.afDB.database.ref('allCities/'+ this.cityVar + '/allPlaces/' + this.company + '/location').once('value').then((snap)=>{\r\n                                                //     console.log(snap.val());\r\n                                                    \r\n                                                //     snap.val().forEach(location => {\r\n                                                //         this.SignUpService.setFixedLocationCoordinates(location.zone, this.user.userId, location.lat, location.lng );\r\n                                                //         this.SignUpService.setFixedLocationName(location.zone, this.user.userId, location.name);   \r\n                                                //         this.SignUpService.addPlaceZone(location.zone, this.user.userId);  \r\n                                                //     })\r\n\r\n                                                // }).then(()=>{\r\n                                                //     this.SignUpService.saveUserInAllUsers(this.company, user.uid, this.cityVar);\r\n                                                // })\r\n\r\n                                                //send text message with code\r\n                                                // this.sendVerificationCode(this.user.userId);\r\n\r\n                                            }else{\r\n                                                console.log('there is no user');\r\n                                            }\r\n                                        })\r\n                                    };\r\n                    \r\n                                    // sending email verification and verifying whether email is verified or not\r\n                                    this.AngularFireAuth.auth.onAuthStateChanged((user)=>{\r\n                                        if(user){\r\n                                            if(user.emailVerified == false){\r\n                                                user.sendEmailVerification();\r\n                                                loading.dismiss();\r\n                                                const alert = this.alertCtrl.create({\r\n                                                    title: '¡REGISTRO EXITOSO!',\r\n                                                    subTitle: 'En los próximos minutos te enviaremos un link de verificación a tu email',\r\n                                                    buttons: [\r\n                                                        {\r\n                                                            text: 'OK',\r\n                                                            handler: () => {\r\n                    \r\n                                                                    this.navCtrl.setRoot('DriverUserVerificationPage');        \r\n                                                            }\r\n                                                        }\r\n                                                    ]\r\n                                                });\r\n                                                this.successfulRegister = true;\r\n                                                alert.present();\r\n                                            console.log(\"verification email has been sent\");\r\n                                            }else{\r\n                                                console.log(\"verification email has not been sent or the email is already verified\");\r\n                                            }\r\n                                        }else{\r\n                                            console.log('there is no user');\r\n                                        }\r\n                                    }) \r\n\r\n                                }).catch((error)=>{\r\n                                    loading.dismiss();\r\n                                    console.log(error);\r\n                                    \r\n                                    if(error.code === \"auth/email-already-in-use\"){\r\n                                        const alert = this.alertCtrl.create({\r\n                                            title: 'ya existe una cuenta con este correo',\r\n                                            subTitle: 'Si ya te registraste en WAYPOOL, sólo debes iniciar sesión con los datos con los que te registraste. También puedes estar registrandote con un correo ya existente',\r\n                                            buttons: ['OK']\r\n                                        });\r\n                                        alert.present(); \r\n                                    }\r\n                                })\r\n                                \r\n                            }else{\r\n                                loading.dismiss();\r\n                                const alert = this.alertCtrl.create({\r\n                                    title: 'Oops!',\r\n                                    subTitle: 'las contraseñas no coinciden, intenta de nuevo',\r\n                                    buttons: ['OK']\r\n                                });\r\n                                alert.present();\r\n                            }\r\n\r\n                    \r\n                    }\r\n                }else{\r\n                 \r\n                    loading.dismiss();\r\n                    const alert = this.alertCtrl.create({\r\n                        title: 'El correo que ingresaste no corresponde a un correo corporativo',\r\n                        subTitle: 'Regístrate con la opción \"registro con correo personal\" si tu empresa no cuenta con correo corporativo',\r\n                        buttons: ['OK']\r\n                    });\r\n                    alert.present();\r\n\r\n                }\r\n\r\n            }else{\r\n                this.corpEmailDetected = true;\r\n                if(this.typeOfSignUp === 'corp'){\r\n                    if(!this.signupGroup.controls['isChecked'].value === true ){\r\n                        loading.dismiss();\r\n                        const alert = this.alertCtrl.create({\r\n                            title: 'No aceptaste nuestros términos y condiciones',\r\n                            subTitle: 'Debes estar de acuerdo con nustros términos y condiciones para usar Waypool',\r\n                            buttons: ['OK']\r\n                        });\r\n                        alert.present(); \r\n                    }else{\r\n                            //creating user on firebase\r\n                            let userName = this.signupGroup.controls['name'].value;\r\n                            let userLastName = this.signupGroup.controls['lastname'].value;\r\n                            let userEmail = this.signupGroup.controls['email'].value \r\n                            let userPassword = this.signupGroup.controls['password'].value;\r\n                            let userPhone = this.signupGroup.controls['phone'].value;\r\n                        \r\n                    // saving data in variable\r\n                   \r\n                        this.user = {\r\n                            name: userName,\r\n                            lastname: userLastName,\r\n                            email: userEmail,\r\n                            phone: '+57'+userPhone,\r\n                            createdBy: 'costumer',\r\n                            // PREGUNTARLE SOBRE QUÉ EMPRESA TRABAJA MÁS ADELANTE\r\n                            // company: this.company,\r\n                            city: this.cityVar,\r\n                            //this sets documents true by default//\r\n                            documents:{\r\n                                license: true,\r\n                                id: true\r\n                            }\r\n                        };\r\n                    \r\n\r\n                \r\n                            // this.SignUpService.userPlace = userPlace;\r\n                                \r\n                \r\n                            if(this.signupGroup.controls['password'].value === this.signupGroup.controls['passwordconf'].value){\r\n                                this.authenticationService.registerWithEmail(userEmail, userPassword).then(()=>{\r\n\r\n                                    if(!this.user.userId){\r\n                                        this.AngularFireAuth.auth.onAuthStateChanged((user)=>{\r\n                                            if(user){\r\n                                                    user.getIdToken().then((token)=>{\r\n                                                    this.user.tokenId = token;\r\n                                                    })\r\n                                                if(!this.user.userId){\r\n                                                    this.user.userId = user.uid;\r\n                                                }\r\n\r\n                                                // this.zones.forEach(zone => {\r\n                                                                                                       \r\n                                                    //CAMBIAR  EN PRODUCCION - REGLAS DE SEGURIDAD\r\n                                                    this.SignUpService.saveUserTest(this.user);\r\n                                                    //no se si esto es necesario - REVISAR\r\n                                                    this.SignUpService.saveUserInAllUsers( user.uid, this.cityVar);\r\n\r\n                                                // })\r\n\r\n                                                // this.afDB.database.ref('allCities/'+ this.cityVar + '/allPlaces/' + this.company + '/location').once('value').then((snap)=>{\r\n                                                //     console.log(snap.val());\r\n                                                    \r\n                                                //     snap.val().forEach(location => {\r\n                                                //         this.SignUpService.setFixedLocationCoordinates(location.zone, this.user.userId, location.lat, location.lng );\r\n                                                //         this.SignUpService.setFixedLocationName(location.zone, this.user.userId, location.name);   \r\n                                                //         this.SignUpService.addPlaceZone(location.zone, this.user.userId);  \r\n                                                //     })\r\n\r\n                                                // }).then(()=>{\r\n                                                //     this.SignUpService.saveUserInAllUsers(this.company, user.uid, this.cityVar);\r\n                                                // })\r\n\r\n                                                //send text message with code\r\n                                                // this.sendVerificationCode(this.user.userId);\r\n\r\n                                            }else{\r\n                                                console.log('there is no user');\r\n                                            }\r\n                                        })\r\n                                    };\r\n                    \r\n                                    // sending email verification and verifying whether email is verified or not\r\n                                    this.AngularFireAuth.auth.onAuthStateChanged((user)=>{\r\n                                        if(user){\r\n                                            if(user.emailVerified == false){\r\n                                                user.sendEmailVerification();\r\n                                                loading.dismiss();\r\n                                                const alert = this.alertCtrl.create({\r\n                                                    title: '¡REGISTRO EXITOSO!',\r\n                                                    subTitle: 'En los próximos minutos te enviaremos un link de verificación a tu email',\r\n                                                    buttons: [\r\n                                                        {\r\n                                                            text: 'OK',\r\n                                                            handler: () => {\r\n                    \r\n                                                                    this.navCtrl.setRoot('LoginPage');        \r\n                                                            }\r\n                                                        }\r\n                                                    ]\r\n                                                });\r\n                                                alert.present();\r\n                                                this.successfulRegister = true;\r\n                                            console.log(\"verification email has been sent\");\r\n                                            }else{\r\n                                                console.log(\"verification email has not been sent or the email is already verified\");\r\n                                            }\r\n                                        }else{\r\n                                            console.log('there is no user');\r\n                                        }\r\n                                    }) \r\n\r\n                                }).catch((error)=>{\r\n                                    loading.dismiss();\r\n                                    console.log(error);\r\n                                    \r\n                                    if(error.code === \"auth/email-already-in-use\"){\r\n                                        const alert = this.alertCtrl.create({\r\n                                            title: 'ya existe una cuenta con este correo',\r\n                                            subTitle: 'Si ya te registraste en WAYPOOL, sólo debes iniciar sesión con los datos con los que te registraste. También puedes estar registrandote con un correo ya existente',\r\n                                            buttons: ['OK']\r\n                                        });\r\n                                        alert.present(); \r\n                                    }\r\n                                })\r\n                                \r\n                            }else{\r\n                                loading.dismiss();\r\n                                const alert = this.alertCtrl.create({\r\n                                    title: 'Oops!',\r\n                                    subTitle: 'las contraseñas no coinciden, intenta de nuevo',\r\n                                    buttons: ['OK']\r\n                                });\r\n                                alert.present();\r\n                            }\r\n\r\n                    \r\n                    }\r\n                }else{\r\n                    this.corpEmailDetected = true;\r\n                    loading.dismiss();\r\n                    const alert = this.alertCtrl.create({\r\n                        title: 'El correo que ingresaste parece ser un correo corporativo',\r\n                        subTitle: 'Regístrate con la opción \"registro con correo corporativo\" si cuentas con un correo corporativo',\r\n                        buttons: ['OK']\r\n                    });\r\n                    alert.present();\r\n\r\n                }\r\n\r\n            }\r\n            loading.dismiss(); \r\n            // this.noCompanyIdentified(count);\r\n\r\n            }else{\r\n                \r\n            }        \r\n        }\r\n       \r\n    }\r\n\r\n\r\n    sendVerificationCode(userId){\r\n        this.navCtrl.push('VerificationNumberPage', {userId: userId});\r\n}\r\n\r\nionViewDidLeave(){\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/p-signup/signup.ts"],"sourceRoot":""}