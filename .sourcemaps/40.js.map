{"version":3,"sources":["../../src/pages/p-listride/listride.module.ts","../../src/pages/p-listride/listride.ts"],"names":[],"mappings":"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","file":"40.js","sourcesContent":["\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ListridePage } from './listride';\r\n \r\n@NgModule({\r\n  declarations: [\r\n    ListridePage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ListridePage),\r\n  ],\r\n  exports: [\r\n    ListridePage\r\n  ]\r\n})\r\nexport class ListridePageModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/p-listride/listride.module.ts","import { Component } from '@angular/core';\r\nimport { NavController, ModalController, ToastController, IonicPage, App, LoadingController, NavParams, AlertController } from 'ionic-angular';\r\nimport * as GeoFire from 'geofire';\r\n\r\nimport { AngularFireDatabase, AngularFireList} from 'angularfire2/database';\r\nimport { sendCoordsService } from '../../services/sendcoords.service';\r\nimport { SignUpService } from '../../services/signup.services';\r\nimport { geofireService } from '../../services/geoFire.service';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { reservesService } from '../../services/reserves.service';\r\nimport { TripsService } from '../../services/trips.service';\r\nimport { Subject } from 'rxjs';\r\nimport { setDOM } from '@angular/platform-browser/src/dom/dom_adapter';\r\n@IonicPage()\r\n\r\n@Component({\r\n  selector: 'page-listride',\r\n  templateUrl: 'listride.html'\r\n})\r\nexport class ListridePage {\r\n  reservesAvailable:any = [];\r\n  crewsAvailable:any = [];\r\n  routeTrips:any = [];\r\n  routeCrews:any = [];\r\n  locationDestinationUser:any;\r\n  locationOriginUser:any;\r\n  user:any;\r\n  userUid=this.AngularFireAuth.auth.currentUser.uid;\r\n  test:any;\r\n  reserve:any;\r\n  ReservesGeofire: any =[];\r\n  CrewsGeofire: any =[];\r\n  tripsReserved:any =[];\r\n  reserveLMU:any;\r\n  unsubscribe = new Subject;\r\n  pendingUsers:any = []; \r\n  noReserve:boolean = false;\r\n  noCrew:boolean = false;\r\n\r\n\r\n\r\n  ///VARIABLES GEOFIRE\r\n  latOr:any;\r\n  lngOr:any;\r\n  latDest:any;\r\n  lngDest:any;\r\n  pointsAlongRoute = [];\r\n  indexesOfPointsAlongRoute = [];\r\n  geoquery1:any;\r\n  geoquery2:any;\r\n  geoqueryRouteOrigin:any;\r\n  geoqueryRouteDestination:any;\r\n  geofireOriginConfirmed:boolean = false;\r\n  geofireOriginConfirmedOnRoute:boolean = false\r\n  geofireDestinationConfirmed:boolean = false;\r\n  geofireDestinationConfirmedOnRoute:boolean = false;\r\n  keyTripForGeofireInRouteDest:any;\r\n  driverIdForGeofireInRouteDest:any;\r\n  keysIdentifiedInOrigin = [];\r\n  keysIdentifiedInOriginRoute = [];\r\n  showCrew:boolean = false;\r\n  showCarpool:boolean = true;\r\n  showNearby:boolean = true;\r\n  showRoute:boolean = false;\r\n  segment:any;\r\n  segmentCarpool:any;\r\n  segmentCrew:any;\r\n  loading:any;\r\n  showNearbyCrew:boolean = true;\r\n  showRouteCrew:boolean = false;\r\n  orCoords:any;\r\n  destCoords:any;\r\n  nameOr:any;\r\n  nameDest:any;\r\n\r\n  \r\n  constructor(public navParams: NavParams, public navCtrl: NavController,private app:App,public TripsService:TripsService,public loadingCtrl: LoadingController,public toastCtrl: ToastController,public reservesService:reservesService,  private AngularFireAuth: AngularFireAuth,private afDB: AngularFireDatabase, public SignUpService: SignUpService, public sendCoordsService: sendCoordsService,public modalCtrl: ModalController, private geoFireService: geofireService, public alertCtrl: AlertController ) {\r\n  console.log(\"AQUI EMPIEZA\")\r\n\r\n  this.loading = this.loadingCtrl.create({\r\n    spinner: 'bubbles',\r\n    content: `\r\n      <div class=\"custom-spinner-container\">\r\n        <div class=\"custom-spinner-box\"></div>\r\n      </div>`\r\n      });\r\n  this.loading.present();\r\n\r\n    this.afDB.database.ref('usersTest/' + this.userUid).once('value').then((snap)=>{\r\n      this.user = snap.val();\r\n      console.log(this.user);\r\n      \r\n  })\r\n\r\n  \r\n    this.latOr = this.navParams.get('latOr');\r\n    this.lngOr = this.navParams.get('lngOr');\r\n    this.latDest = this.navParams.get('latDest');\r\n    this.lngDest = this.navParams.get('lngDest');\r\n    this.nameOr = this.navParams.get('nameOr');\r\n    this.nameDest = this.navParams.get('nameDest')\r\n    this.pointsAlongRoute = this.navParams.get('pointsAlongRoute');\r\n    this.indexesOfPointsAlongRoute = this.navParams.get('indexesOfPointsAlongRoute');\r\n\r\n\r\n    this.orCoords = ({\r\n      lat: this.latOr,\r\n      lng: this.lngOr\r\n    });\r\n\r\n    this.destCoords = ({\r\n      lat:this.latDest,\r\n      lng: this.lngDest\r\n    })\r\n  \r\n\r\n\r\n        this.reservesService.getReserves( this.userUid).takeUntil(this.unsubscribe)    \r\n        .subscribe(reserves => {\r\n          // this.initiatedTrips = [];\r\n          // this.reservesAvailable = [];\r\n          \r\n          this.ReservesGeofire = reserves; \r\n          console.log(this.ReservesGeofire);\r\n          \r\n          if(this.ReservesGeofire.length === 0){\r\n              //there are no reserves to show\r\n              this.noReserve = true;\r\n          }else{\r\n              //there are reserves\r\n              this.noReserve = false;  \r\n          }\r\n          // this.presentLoadingCustom(this.ReservesGeofire);\r\n          \r\n            this.getAvailableReserves();\r\n         \r\n          \r\n\r\n        });\r\n\r\n\r\n        this.reservesService.getCrews( this.userUid).takeUntil(this.unsubscribe)    \r\n        .subscribe(crews => {\r\n          // this.initiatedTrips = [];\r\n       \r\n          \r\n          this.CrewsGeofire = crews; \r\n          console.log(this.CrewsGeofire);\r\n          \r\n          if(this.CrewsGeofire.length === 0){\r\n              //there are no reserves to show\r\n              this.noCrew = true;\r\n          }else{\r\n              //there are reserves\r\n              this.noCrew = false;  \r\n          }\r\n          // this.presentLoadingCustom(this.ReservesGeofire);\r\n          \r\n            this.getAvailableCrews();\r\n         \r\n          \r\n\r\n        });\r\n\r\n\r\n\r\n        this.reservesService.getSeenReservesInAvailableReserves( this.userUid).subscribe((reserve)=>{\r\n          this.reservesAvailable = reserve;\r\n          console.log(this.reservesAvailable);\r\n\r\n          \r\n        })\r\n\r\n        this.reservesService.getSeenReservesInAvailableReservesRoute( this.userUid).subscribe((reserve)=>{\r\n          this.routeTrips = reserve;\r\n          console.log(this.routeTrips);\r\n          \r\n          // this.getButtonStarter()\r\n        })\r\n\r\n\r\n        this.reservesService.getSeenCrewsInAvailableCrews( this.userUid).subscribe((crew)=>{\r\n          this.crewsAvailable = crew;\r\n          console.log(this.crewsAvailable);\r\n\r\n          \r\n        })\r\n\r\n        this.reservesService.getSeenCrewsInAvailableCrewsRoute( this.userUid).subscribe((crew)=>{\r\n          this.routeCrews = crew;\r\n          console.log(this.routeCrews);\r\n          \r\n          // this.getButtonStarter()\r\n        })\r\n\r\n\r\n\r\n        \r\n          \r\n        this.loading.dismiss();\r\n        \r\n  }\r\n\r\n\r\n  // getButtonStarter(){\r\n    \r\n  //   if(this.reservesAvailable.length !== 0 && this.routeTrips.length === 0){\r\n\r\n      \r\n  //     this.segment = 'carpool';\r\n  //     this.segmentCarpool = 'nearby'\r\n  //     this.carpool();\r\n  //     this.nearby();\r\n  //   }else if(this.routeTrips.length !== 0 && this.reservesAvailable.length === 0){\r\n\r\n  //     this.segment = 'carpool';\r\n  //     this.segmentCarpool = 'route'\r\n  //     this.carpool();\r\n  //     this.route();\r\n  //   }else if(this.routeTrips.length !== 0 && this.reservesAvailable.length !== 0){\r\n  //     this.segment = 'carpool';\r\n  //     this.segmentCarpool = 'nearby'\r\n  //     this.carpool();\r\n  //     this.nearby();\r\n  //   }\r\n\r\n  \r\n  //     this.loading.dismiss();\r\n\r\n    \r\n  // }\r\n\r\n \r\n\r\n  ionViewDidLeave(){\r\n    this.unSubscribeServices();\r\n    \r\n    console.log(\"me active\")\r\n    this.TripsService.eliminateAvailableUsers(this.userUid);\r\n    this.TripsService.eliminateSeenAvailableReserves(this.userUid);\r\n    this.TripsService.eliminateSeenAvailableReservesRoute(this.userUid);\r\n\r\n    this.TripsService.eliminateAvailableCrews(this.userUid);\r\n    this.TripsService.eliminateSeenAvailableCrews(this.userUid);\r\n    this.TripsService.eliminateSeenAvailableCrewsRoute(this.userUid);\r\n\r\n  }\r\n\r\n\r\n\r\n      doRefresh(event) {\r\n        \r\n        this.afDB.database.ref('allCities/' + this.user.city ).once('value').then((snapGeoquery)=>{\r\n\r\n        this.setGeofireOr( snapGeoquery.val().geofireOr, this.latOr, this.lngOr, this.userUid, snapGeoquery.val().geofireDest, this.latDest, this.lngDest);\r\n        this.setGeofireRouteOrigin(snapGeoquery.val().geofireRoute, this.latOr, this.lngOr, snapGeoquery.val().geofireDest, this.latDest, this.lngDest, this.userUid )\r\n     \r\n\r\n        })\r\n        \r\n        setTimeout(() => {\r\n          if(this.geoquery1){\r\n            this.geoquery1.cancel(); \r\n          }\r\n          if(this.geoquery2){\r\n            this.geoquery2.cancel();\r\n          }\r\n          \r\n          if(this.geoqueryRouteOrigin){\r\n            this.geoqueryRouteOrigin.cancel();\r\n          }\r\n\r\n          if(this.geoqueryRouteDestination){\r\n            this.geoqueryRouteDestination.cancel();\r\n          }\r\n\r\n\r\n\r\n          if(this.geofireDestinationConfirmed === false && this.geofireDestinationConfirmedOnRoute === false){\r\n\r\n            let alert = this.alertCtrl.create({\r\n              title: 'No hay nuevos poolers compartiendo sus viajes',\r\n              subTitle: 'Intenta más tarde',\r\n              buttons: ['OK']\r\n            });\r\n            alert.present();\r\n \r\n          }else{\r\n\r\n          }\r\n          event.complete();\r\n\r\n        }, 5000);\r\n      }\r\n\r\n\r\n\r\n     getAvailableReserves(){ \r\n        //bring reserves that i have entered to hide them in listride\r\n    // this.reservesAvailable = [];\r\n    //after getting reserve id and driverUid from my own user node, we used them to access the reserve information in the node reserves\r\n    console.log(this.ReservesGeofire);\r\n      \r\n    this.ReservesGeofire.forEach(reserveGeofire => {        \r\n        \r\n\r\n        if(reserveGeofire.onRouteDestination == true || reserveGeofire.onRouteOrigin == true){\r\n          \r\n          this.afDB.database.ref('/reservesTest/'+reserveGeofire.driverId+'/'+ reserveGeofire.keyReserve).once('value').then((snapTripRoute)=>{\r\n            let obj = snapTripRoute.val();\r\n            this.afDB.database.ref('/usersTest/'+ this.userUid +'/reservesSeenInAvailableReservesRoute/').remove().then(()=>{\r\n              this.afDB.database.ref('/usersTest/'+ this.userUid +'/reservesSeenInAvailableReservesRoute/'+ reserveGeofire.keyReserve).update(obj)\r\n              .then(()=>{\r\n                this.afDB.database.ref('/usersTest/'+ this.userUid +'/reservesSeenInAvailableReservesRoute/'+ reserveGeofire.keyReserve).update({distance: (reserveGeofire.distance*1000)})\r\n              })\r\n            })\r\n            \r\n             \r\n          })\r\n\r\n      }else{\r\n\r\n        this.afDB.database.ref('/reservesTest/'+ reserveGeofire.driverId +'/'+ reserveGeofire.keyReserve).once('value').then((snapReserve)=>{\r\n          let obj = snapReserve.val();\r\n          console.log(obj);\r\n          this.afDB.database.ref('/usersTest/'+ this.userUid +'/reservesSeenInAvailableReserves/').remove().then(()=>{\r\n            this.afDB.database.ref('/usersTest/'+ this.userUid +'/reservesSeenInAvailableReserves/'+ reserveGeofire.keyReserve).update(obj)\r\n            .then(()=>{\r\n              this.afDB.database.ref('/usersTest/'+ this.userUid +'/reservesSeenInAvailableReserves/'+ reserveGeofire.keyReserve).update({distance: (reserveGeofire.distance*1000)})\r\n            })\r\n          })\r\n        })\r\n\r\n      }\r\n  })\r\n\r\n  }\r\n\r\n\r\n\r\n  getAvailableCrews(){ \r\n    //bring crews that i have entered to hide them in listride\r\n// this.reservesAvailable = [];\r\n//after getting crew id and adminId from my own user node, we used them to access the crew information in the node crews\r\nconsole.log(this.CrewsGeofire);\r\n  \r\nthis.CrewsGeofire.forEach(crewGeofire => {        \r\n    \r\n\r\n    if(crewGeofire.onRouteDestination == true || crewGeofire.onRouteOrigin == true){\r\n      \r\n      this.afDB.database.ref('/crewsTest/'+crewGeofire.adminId+'/'+ crewGeofire.crewId).once('value').then((snapCrewRoute)=>{\r\n        let obj = snapCrewRoute.val();\r\n        this.afDB.database.ref('/usersTest/'+ this.userUid +'/crewsSeenInAvailableCrewsRoute/').remove().then(()=>{\r\n          if(crewGeofire.adminId === this.userUid){\r\n            console.log('yo te cree');\r\n            \r\n          }else{\r\n            this.afDB.database.ref('/usersTest/'+ this.userUid +'/crewsSeenInAvailableCrewsRoute/'+ crewGeofire.crewId).update(obj)\r\n          .then(()=>{\r\n            this.afDB.database.ref('/usersTest/'+ this.userUid +'/crewsSeenInAvailableCrewsRoute/'+ crewGeofire.crewId).update({distance: (crewGeofire.distance*1000)})\r\n          })\r\n          }\r\n          \r\n        })\r\n        \r\n         \r\n      })\r\n\r\n  }else{\r\n\r\n    this.afDB.database.ref('/crewsTest/'+ crewGeofire.adminId+'/'+ crewGeofire.crewId).once('value').then((snapCrew)=>{\r\n      let obj = snapCrew.val();\r\n      console.log(obj);\r\n      this.afDB.database.ref('/usersTest/'+ this.userUid +'/crewsSeenInAvailableCrews/').remove().then(()=>{\r\n        if(crewGeofire.adminId === this.userUid){\r\n          console.log('yo te cree');\r\n          \r\n        }else{\r\n          this.afDB.database.ref('/usersTest/'+ this.userUid +'/crewsSeenInAvailableCrews/'+ crewGeofire.crewId).update(obj)\r\n        .then(()=>{\r\n          this.afDB.database.ref('/usersTest/'+ this.userUid +'/crewsSeenInAvailableCrews/'+ crewGeofire.crewId).update({distance: (crewGeofire.distance*1000)})\r\n        })\r\n        }\r\n        \r\n      })\r\n    })\r\n\r\n  }\r\n})\r\n\r\n}\r\n\r\n\r\n  carpool(){\r\n\r\n    this.showCrew = false;\r\n    this.showCarpool = true;\r\n    \r\n    \r\n  }\r\n\r\n  crew(){\r\n   \r\n    this.showCarpool = false;\r\n    this.showCrew = true;\r\n  }\r\n\r\n\r\n  nearby(){\r\n    this.showRoute = false;\r\n    this.showNearby = true;\r\n\r\n  }\r\n\r\n  route(){\r\n    this.showNearby = false;\r\n    this.showRoute = true;\r\n  }\r\n\r\n\r\n\r\n  nearbyCrew(){\r\n\r\n    this.showRouteCrew = false;\r\n    this.showNearbyCrew = true; \r\n  }\r\n\r\n  routeCrew(){\r\n\r\n    this.showNearbyCrew = false;\r\n    this.showRouteCrew = true;\r\n\r\n  }\r\n\r\n\r\n \r\n confirmpopup(reserve){\r\n   this.reservesService.getPendingUsers(reserve.driver.userId,reserve.keyTrip).takeUntil(this.unsubscribe)\r\n    .subscribe(pendingUsers=>{\r\n      this.pendingUsers = pendingUsers\r\n      console.log(pendingUsers);\r\n     \r\n      \r\n    })\r\n    if( this.pendingUsers === undefined||this.pendingUsers === null){\r\n      //there is no one in the trip\r\n      let modal = this.modalCtrl.create('ConfirmpopupPage',{reserve:reserve, orCoords: this.orCoords, destCoords: this.destCoords});\r\n    modal.onDidDismiss(accepted => {\r\n        if(accepted){\r\n          this.unSubscribeServices();\r\n         this.navCtrl.pop();\r\n         this.TripsService.eliminateAvailableUsers(this.userUid);\r\n         this.TripsService.eliminateSeenAvailableReserves(this.userUid);\r\n         this.TripsService.eliminateSeenAvailableReservesRoute(this.userUid);\r\n         this.TripsService.eliminateAvailableCrews(this.userUid);\r\n         this.TripsService.eliminateSeenAvailableCrews(this.userUid);\r\n         this.TripsService.eliminateSeenAvailableCrewsRoute(this.userUid);\r\n\r\n        //  this.TripsService.eliminateSeenAvailableReservesLMU(this.SignUpService.userPlace,this.userUid)\r\n\r\n         this.navCtrl.push('ReservetripPage');\r\n        }\r\n      })\r\n    modal.present();\r\n    console.log('no hay nadie')\r\n    \r\n    }else if (this.pendingUsers.length >= 4){\r\n      //the trip is full \r\n      const toast = this.toastCtrl.create({\r\n        message: 'Este viaje ya tiene 4 personas reservadas, porfavor selecciona otro',\r\n        showCloseButton:true,\r\n        closeButtonText: 'OK',\r\n        position:'bottom'\r\n           });\r\n      toast.present();\r\n      console.log('menor de 4')\r\n    \r\n    }else{\r\n      console.log(this.pendingUsers.length)\r\n      //its less of 4 people\r\n      let modal = this.modalCtrl.create('ConfirmpopupPage',{reserve:reserve, orCoords: this.orCoords, destCoords: this.destCoords});\r\n    modal.onDidDismiss(accepted => {\r\n        if(accepted){\r\n          this.unSubscribeServices();\r\n         this.navCtrl.pop();\r\n         this.TripsService.eliminateAvailableUsers(this.userUid);\r\n         this.TripsService.eliminateSeenAvailableReserves(this.userUid);\r\n         this.TripsService.eliminateSeenAvailableReservesRoute(this.userUid);\r\n         this.TripsService.eliminateAvailableCrews(this.userUid);\r\n         this.TripsService.eliminateSeenAvailableCrews(this.userUid);\r\n         this.TripsService.eliminateSeenAvailableCrewsRoute(this.userUid);\r\n\r\n\r\n        //  this.TripsService.eliminateSeenAvailableReservesLMU(this.SignUpService.userPlace,this.userUid)\r\n\r\n         this.navCtrl.push('ReservetripPage');\r\n        }\r\n      })\r\n    modal.present();\r\n    console.log('else')\r\n    }\r\n\r\n //IMPORTANTE QUE AL FINAL SE LE COLOQUE QUE SE QUITE CUANDO ACEPTE A ALGUIEN\r\n  }\r\n\r\n\r\n\r\n\r\n  enterTrip(trip){\r\n   let modal = this.modalCtrl.create('ConfirmtripPage',{trip:trip});\r\n   modal.onDidDismiss((accepted) => {\r\n    if(accepted){\r\n        this.unSubscribeServices();\r\n        this.navCtrl.pop();\r\n        this.TripsService.eliminateAvailableUsers(this.userUid);\r\n        this.TripsService.eliminateSeenAvailableReserves(this.userUid);\r\n        this.TripsService.eliminateSeenAvailableReservesRoute(this.userUid);\r\n        this.TripsService.eliminateAvailableCrews(this.userUid);\r\n        this.TripsService.eliminateSeenAvailableCrews(this.userUid);\r\n        this.TripsService.eliminateSeenAvailableCrewsRoute(this.userUid);\r\n\r\n        // this.TripsService.eliminateSeenAvailableReservesLMU(this.SignUpService.userPlace,this.userUid)\r\n\r\n        this.navCtrl.push('MyridePage');\r\n      }\r\n    })\r\n    modal.present();\r\n   //IMPORTANTE QUE AL FINAL SE LE COLOQUE QUE SE QUITE CUANDO ACEPTE A ALGUIEN\r\n   }\r\n\r\n   createGroup(){\r\n    \r\n    this.locationOriginUser = {\r\n      lat: this.latOr,\r\n      lng: this.lngOr\r\n    }\r\n    \r\n    \r\n    this.locationDestinationUser = {\r\n      lat: this.latDest,\r\n      lng: this.lngDest\r\n    }\r\n\r\n    let modal = this.modalCtrl.create('CreateGroupPage', {origin:this.locationOriginUser,destination:this.locationDestinationUser, indexesOfPointsAlongRoute: this.indexesOfPointsAlongRoute, pointsAlongRoute: this.pointsAlongRoute});\r\n\r\n    modal.present();\r\n  }\r\n\r\n\r\n\r\n\r\n   unSubscribeServices(){\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n  \r\n\r\n\r\n  help(){\r\n    const toast = this.toastCtrl.create({\r\n      message: 'Estos son los conductores que se van a tu misma zona. Podrás ver sus horas en las que se van y unirte en su viaje',\r\n      showCloseButton:true,\r\n      closeButtonText: 'OK',\r\n      position:'top'\r\n         });\r\n    toast.present();\r\n  }\r\n\r\n\r\n\r\n  joinCrew(crew){\r\n\r\n    let userToCrew = {\r\n      city: this.user.city,\r\n      company: this.user.company,\r\n      email: this.user.email,\r\n      name: this.user.name,\r\n      lastname: this.user.lastname,\r\n      phone: this.user.phone,\r\n      userId: this.user.userId,\r\n      verifiedPerson: this.user.verifiedPerson,\r\n      origin: {\r\n        name: this.nameOr,\r\n        coords: {\r\n        lat: this.latOr,\r\n        lng: this.lngOr\r\n        }\r\n      },\r\n\r\n      destination: {\r\n        name: this.nameDest, \r\n        coords: {\r\n          lat: this.latDest,\r\n          lng: this.lngDest\r\n        }\r\n        \r\n      }\r\n\r\n    }\r\n    this.afDB.database.ref('/crewsTest/' + crew.admin.userId + '/' + crew.crewId + '/members').push(userToCrew)\r\n      .then((snap)=>{\r\n        const keyPushCrew = snap.key\r\n\r\n        this.afDB.database.ref('/usersTest/' + this.userUid + '/crewsIJoined/' + keyPushCrew )\r\n          .update({\r\n            adminId: crew.admin.userId,\r\n            crewId: crew.crewId\r\n          }).then(()=>{\r\n\r\n            let alert = this.alertCtrl.create({\r\n              title: 'Bienvenido a este grupo!!',\r\n              subTitle: 'Mira los detalles del grupo en \"Mis Viajes\"',\r\n              buttons: ['OK']\r\n            });\r\n            alert.present();\r\n            \r\n          })\r\n\r\n      })\r\n    \r\n\r\n  }\r\n\r\n\r\n\r\n  ////////////// GEOQUERYS FUNCTIONS //////////////////\r\n\r\n\r\n\r\n    //geoquery origin\r\n    setGeofireOr( radiusOr:number, latOr, lngOr, userId, radiusDest:number, latDest, lngDest ):void{ \r\n      let dbRef = this.afDB.database.ref(  '/geofireOr/' );\r\n      let geoFire = new GeoFire(dbRef); \r\n    \r\n      this.geoquery2 = geoFire.query({\r\n        center: [latOr, lngOr],\r\n        radius: radiusOr\r\n      })\r\n\r\n        this.keyEnteredOr(radiusDest, latDest, lngDest, userId  );\r\n        this.keyExitedOr( userId  );\r\n        \r\n        console.log('geoquery or added');\r\n    }\r\n\r\n\r\n    keyEnteredOr(radiusDest, latDest, lngDest,  userId ){\r\n      // var keyEnteredOr = false;\r\n      this.geoquery2.on(\"key_entered\", function(key, location, distance){\r\n        //  keyEnteredOr = true;\r\n         \r\n         this.geofireOriginConfirmed = true;\r\n         let orRouteConf = false\r\n         this.keysIdentifiedInOrigin.push({keyTrip:key, orRouteConf: orRouteConf, distance: distance});\r\n         \r\n         if(this.geoquery1){\r\n\r\n         }else{\r\n          this.setGeofireDest(radiusDest, latDest, lngDest, userId);\r\n         }\r\n         \r\n             \r\n       }.bind(this));\r\n      }\r\n    \r\n    \r\n      \r\n      keyExitedOr( userId  ){\r\n       this.geoquery2.on(\"key_exited\", function(key){\r\n         this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).remove()\r\n       }.bind(this))\r\n      }\r\n\r\n      \r\n\r\n\r\n      //geoquery origin in route\r\n    setGeofireRouteOrigin( radiusRoute:number, lat, lng, radiusDest, latDest, lngDest, userId):void{ \r\n      // console.log(this.geoquriesRouteOrigin);\r\n      let dbRef = this.afDB.database.ref(  '/geofireRoute/' );\r\n      let geoFire = new GeoFire(dbRef); \r\n\r\n      this.geoqueryRouteOrigin = geoFire.query({\r\n        center: [lat, lng],\r\n        radius: radiusRoute\r\n      })\r\n\r\n      this.keyEnteredRouteOrigin( userId, radiusDest, latDest, lngDest );\r\n      this.keyExitedRouteOrigin(  userId  );         \r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    keyEnteredRouteOrigin( userId, radiusDest, latDest, lngDest){\r\n\r\n      this.geoqueryRouteOrigin.on(\"key_entered\", function(key, location, distance){\r\n        \r\n        this.geofireOriginConfirmedOnRoute = true;\r\n        let orRouteConf = true\r\n        \r\n        this.afDB.database.ref('/geofireRoute/' + key ).once('value').then((snap)=>{\r\n          // quede aqui, para verificar que las key identificadas son iguales\r\n          let keyTrip = snap.val().keyTrip;\r\n          this.keysIdentifiedInOriginRoute.push({\r\n            keyTrip: keyTrip,\r\n            orRouteConf: orRouteConf,\r\n            distance: distance\r\n          })\r\n\r\n        }).then(()=>{\r\n          if(this.geoquery1){\r\n\r\n          }else{\r\n           this.setGeofireDest(radiusDest, latDest, lngDest, userId);\r\n          }\r\n\r\n        });\r\n\r\n        console.log('ENTRE EN ORIGIN EN ROUTE');\r\n        \r\n      }.bind(this));\r\n    }\r\n\r\n\r\n\r\n    keyExitedRouteOrigin( userId){\r\n      this.geoqueryRouteOrigin.on(\"key_exited\", function(key){\r\n        this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).remove()\r\n        \r\n      }.bind(this))\r\n      \r\n    }\r\n\r\n\r\n  \r\n    //geoquery destination\r\n    setGeofireDest( radiusDest:number, latDest, lngDest, userId):void{ \r\n      console.log('se prendio geoquery destination, debo salir una sóla vez');\r\n      console.log(this.keysIdentifiedInOriginRoute);\r\n      \r\n      let dbRef = this.afDB.database.ref(  '/geofireDest/' );\r\n      let geoFire = new GeoFire(dbRef); \r\n    \r\n      this.geoquery1 = geoFire.query({\r\n        center: [latDest, lngDest],\r\n        radius: radiusDest\r\n      })\r\n    \r\n      \r\n      this.keyEnteredDest( userId);\r\n      this.keyExitedDest(userId );\r\n    \r\n    console.log('geoquery dest added');\r\n    }\r\n\r\n\r\n\r\n    keyEnteredDest( userId ){\r\n      \r\n      this.geoquery1.on(\"key_entered\", function(key, location, distance){\r\n      console.log(key);\r\n      if(this.keysIdentifiedInOrigin.length !== 0){\r\n\r\n        let count = 0\r\n        for(let element of this.keysIdentifiedInOrigin){\r\n          count = count + 1\r\n          if(element.keyTrip === key){\r\n            this.geofireDestinationConfirmed = true;\r\n            this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).update({\r\n                keyReserve: key,\r\n                distance: element.distance\r\n              \r\n               }).then(()=> {\r\n                   return this.afDB.database.ref( '/geofireDest/'+ key).once('value').then((snap) => {\r\n                    this.driverOnNodeDest = snap.val();\r\n        \r\n                    this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).update({\r\n                        driverId: this.driverOnNodeDest.driverId\r\n            \r\n                    })  \r\n                })\r\n               }) \r\n             \r\n          }\r\n  \r\n          if (count === this.keysIdentifiedInOrigin.length){\r\n            console.log('si se ejecuto el for de keysOrigin');\r\n            \r\n            for(let element of this.keysIdentifiedInOriginRoute){\r\n  \r\n              if(element.keyTrip === key){\r\n                console.log('un key de destination es igual al keytrip que fue identificado en origen');\r\n  \r\n                this.geofireDestinationConfirmed = true;\r\n                this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).once('value')\r\n                .then((snapshot)=>{\r\n                  if(snapshot.val()){\r\n      \r\n                  }else{\r\n                    this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).update({\r\n                      keyReserve: key,\r\n                      onRouteOrigin: true,\r\n                      distance: element.distance\r\n                     }).then(()=> {\r\n                         return this.afDB.database.ref( '/geofireDest/'+ key).once('value').then((snap) => {\r\n                          this.driverOnNodeDest = snap.val();\r\n              \r\n                          this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).update({\r\n                              driverId: this.driverOnNodeDest.driverId\r\n                  \r\n                          })  \r\n                      })\r\n                     })\r\n                  }\r\n                })\r\n              }\r\n  \r\n            }\r\n          }\r\n        }\r\n\r\n      }else if(this.keysIdentifiedInOriginRoute.length !== 0){\r\n\r\n        for(let element of this.keysIdentifiedInOriginRoute){\r\n  \r\n          if(element.keyTrip === key){\r\n            console.log('un key de destination es igual al keytrip que fue identificado en origen');\r\n\r\n            this.geofireDestinationConfirmed = true;\r\n            this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).once('value')\r\n            .then((snapshot)=>{\r\n              if(snapshot.val()){\r\n  \r\n              }else{\r\n                this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).update({\r\n                  keyReserve: key,\r\n                  onRouteOrigin: true,\r\n                  distance: element.distance\r\n                 }).then(()=> {\r\n                     return this.afDB.database.ref( '/geofireDest/'+ key).once('value').then((snap) => {\r\n                      this.driverOnNodeDest = snap.val();\r\n          \r\n                      this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).update({\r\n                          driverId: this.driverOnNodeDest.driverId\r\n              \r\n                      })  \r\n                  })\r\n                 })\r\n              }\r\n            })\r\n          }\r\n\r\n        }\r\n\r\n      }else{\r\n\r\n      }\r\n     \r\n    \r\n     }.bind(this))\r\n\r\n\r\n     setTimeout(() => {\r\n      this.geoquery1.on(\"ready\", function(){\r\n        \r\n        this.afDB.database.ref('allCities/' + this.userInfo.city ).once('value').then((snap)=>{\r\n\r\n            this.setGeofireRouteDest(snap.val().geofireRoute,  this.myLatLngDest.lat(), this.myLatLngDest.lng(), userId);\r\n\r\n        })\r\n        \r\n \r\n      \r\n    }.bind(this))\r\n  }, 300);\r\n }\r\n\r\n\r\n\r\n   \r\n   \r\n   keyExitedDest(userId){\r\n     \r\n     this.geoquery1.on(\"key_exited\", function(key){\r\n       this.afDB.database.ref(  '/usersTest/' + userId + '/availableReserves/' + key).remove()\r\n     }.bind(this))\r\n   }\r\n\r\n\r\n\r\n    //geoquery destination in route\r\n    setGeofireRouteDest( radiusRoute:number, lat, lng, userId ):void{ \r\n      console.log('se ejecutó');\r\n\r\n      let dbRef = this.afDB.database.ref(  '/geofireRoute/' );\r\n      let geoFire = new GeoFire(dbRef); \r\n    \r\n      this.geoqueryRouteDestination = geoFire.query({\r\n        center: [lat, lng],\r\n        radius: radiusRoute\r\n      })\r\n\r\n\r\n      this.keyEnteredRouteDest(  userId );\r\n      this.keyExitedRouteDest( userId  ); \r\n      \r\n           \r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    keyEnteredRouteDest(userId){\r\n\r\n      this.geoqueryRouteDestination.on(\"key_entered\", function(key, location, distance){\r\n  \r\n        \r\n        this.afDB.database.ref('/geofireRoute/' + key ).once('value').then((snap)=>{\r\n          this.keyTripForGeofireInRouteDest = snap.val().keyTrip;\r\n          this.driverIdForGeofireInRouteDest = snap.val().driverId;\r\n          \r\n          \r\n        }).then(()=>{\r\n          if(this.keysIdentifiedInOrigin !== 0){\r\n\r\n            let count = 0\r\n            for(let element of this.keysIdentifiedInOrigin){\r\n              count = count + 1\r\n              if(element.keyTrip === this.keyTripForGeofireInRouteDest){\r\n                this.geofireDestinationConfirmedOnRoute = true;\r\n                \r\n                this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + this.keyTripForGeofireInRouteDest).once('value')\r\n                .then((snapConf)=>{\r\n                  if(snapConf.val()){\r\n                    console.log('te voy a dejar relajado ya que ya te identifiqué');\r\n  \r\n                  }else{\r\n  \r\n                    this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + this.keyTripForGeofireInRouteDest).update({\r\n                      keyReserve: this.keyTripForGeofireInRouteDest,\r\n                      driverId: this.driverIdForGeofireInRouteDest,\r\n                      onRouteDestination: true,\r\n                      distance: element.distance\r\n                     })\r\n  \r\n                  }\r\n                })\r\n                 \r\n              }\r\n  \r\n              if(count === this.keysIdentifiedInOrigin.length){\r\n                for(let element of this.keysIdentifiedInOriginRoute){\r\n                  if(element.keyTrip === this.keyTripForGeofireInRouteDest){\r\n                    this.geofireDestinationConfirmedOnRoute = true;\r\n      \r\n                    this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + this.keyTripForGeofireInRouteDest).once('value')\r\n                        .then((snapConf)=>{\r\n                          if(snapConf.val().driverId === this.driverIdForGeofireInRouteDest){\r\n                            console.log('te voy a dejar relajado ya que ya te identifiqué');  \r\n                          }else{\r\n                            this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + this.keyTripForGeofireInRouteDest).update({\r\n                              keyReserve: this.keyTripForGeofireInRouteDest,\r\n                              driverId: this.driverIdForGeofireInRouteDest,\r\n                              onRouteDestination: true,\r\n                              onRouteOrigin: true, \r\n                              distance: element.distance \r\n                             })\r\n        \r\n                          }\r\n                        })\r\n      \r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n          }else{\r\n            console.log('no hay nada en ' + this.keysIdentifiedInOrigin);\r\n            \r\n          }\r\n        })\r\n        .then(()=>{\r\n          console.log(this.keyTripForGeofireInRouteDest);\r\n           \r\n          console.log('ahora si aqui te encuentro 1');\r\n          \r\n          if(this.keysIdentifiedInOriginRoute !== 0){\r\n            console.log('ahora si aqui te encuentro 2');\r\n            \r\n            for(let element of this.keysIdentifiedInOriginRoute){\r\n              if(element.keyTrip === this.keyTripForGeofireInRouteDest){\r\n                this.geofireDestinationConfirmedOnRoute = true;\r\n  \r\n                this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + this.keyTripForGeofireInRouteDest).once('value')\r\n                    .then((snapConf)=>{\r\n                    \r\n                      \r\n                      if(snapConf.val()){\r\n\r\n                        if(snapConf.val().driverId === this.driverIdForGeofireInRouteDest){\r\n                          console.log('te voy a dejar relajado ya que ya te identifiqué');  \r\n                        }else{\r\n                          this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + this.keyTripForGeofireInRouteDest).update({\r\n                            keyReserve: this.keyTripForGeofireInRouteDest,\r\n                            driverId: this.driverIdForGeofireInRouteDest,\r\n                            onRouteDestination: true,\r\n                            onRouteOrigin: true, \r\n                            distance: element.distance \r\n                           })\r\n      \r\n                        }\r\n                      }else{\r\n\r\n                        this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + this.keyTripForGeofireInRouteDest).update({\r\n                          keyReserve: this.keyTripForGeofireInRouteDest,\r\n                          driverId: this.driverIdForGeofireInRouteDest,\r\n                          onRouteDestination: true,\r\n                          onRouteOrigin: true, \r\n                          distance: element.distance \r\n                         })\r\n    \r\n                      }\r\n                      \r\n                    })\r\n  \r\n              }\r\n            }\r\n\r\n          }else{\r\n\r\n          }\r\n         \r\n        })\r\n                \r\n      }.bind(this))\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    keyExitedRouteDest( userId){\r\n      \r\n      this.geoqueryRouteDestination.on(\"key_exited\", function(key){\r\n\r\n        this.afDB.database.ref(  '/usersTest/' + userId + '/availableReserves/' + key).remove()\r\n\r\n      }.bind(this))\r\n      \r\n    }\r\n\r\n\r\n  \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/p-listride/listride.ts"],"sourceRoot":""}