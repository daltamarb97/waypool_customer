{"version":3,"sources":["../../src/pages/p-listride/listride.module.ts","../../src/pages/p-listride/listride.ts"],"names":[],"mappings":"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","file":"39.js","sourcesContent":["\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ListridePage } from './listride';\n \n@NgModule({\n  declarations: [\n    ListridePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ListridePage),\n  ],\n  exports: [\n    ListridePage\n  ]\n})\nexport class ListridePageModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/p-listride/listride.module.ts","import { Component } from '@angular/core';\nimport { NavController, ModalController, ToastController, IonicPage, App, LoadingController, NavParams, AlertController } from 'ionic-angular';\nimport * as GeoFire from 'geofire';\n\nimport { AngularFireDatabase, AngularFireList} from 'angularfire2/database';\nimport { sendCoordsService } from '../../services/sendCoords.service';\nimport { SignUpService } from '../../services/signup.services';\nimport { geofireService } from '../../services/geoFire.service';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { reservesService } from '../../services/reserves.service';\nimport { TripsService } from '../../services/trips.service';\nimport { Subject } from 'rxjs';\nimport { setDOM } from '@angular/platform-browser/src/dom/dom_adapter';\n@IonicPage()\n\n@Component({\n  selector: 'page-listride',\n  templateUrl: 'listride.html'\n})\nexport class ListridePage {\n  reservesAvailable:any = [];\n  crewsAvailable:any = [];\n  routeTrips:any = [];\n  routeCrews:any = [];\n  locationDestinationUser:any =[];\n  locationOriginUser:any =[];\n  user:any;\n  userUid=this.AngularFireAuth.auth.currentUser.uid;\n  test:any;\n  reserve:any;\n  ReservesGeofire: any =[];\n  CrewsGeofire: any =[];\n  tripsReserved:any =[];\n  reserveLMU:any;\n  unsubscribe = new Subject;\n  pendingUsers:any = []; \n  noReserve:boolean = false;\n  noCrew:boolean = false;\n\n\n\n  ///VARIABLES GEOFIRE\n  latOr:any;\n  lngOr:any;\n  latDest:any;\n  lngDest:any;\n  pointsAlongRoute = [];\n  indexesOfPointsAlongRoute = [];\n  geoquery1:any;\n  geoquery2:any;\n  geoqueryRouteOrigin:any;\n  geoqueryRouteDestination:any;\n  geofireOriginConfirmed:boolean = false;\n  geofireOriginConfirmedOnRoute:boolean = false\n  geofireDestinationConfirmed:boolean = false;\n  geofireDestinationConfirmedOnRoute:boolean = false;\n  keyTripForGeofireInRouteDest:any;\n  driverIdForGeofireInRouteDest:any;\n  keysIdentifiedInOrigin = [];\n  keysIdentifiedInOriginRoute = [];\n  showCrew:boolean = false;\n  showCarpool:boolean = true;\n  showNearby:boolean = true;\n  showRoute:boolean = false;\n  segment:any;\n  segmentCarpool:any;\n  segmentCrew:any;\n  loading:any;\n  showNearbyCrew:boolean = true;\n  showRouteCrew:boolean = false;\n  \n  constructor(public navParams: NavParams, public navCtrl: NavController,private app:App,public TripsService:TripsService,public loadingCtrl: LoadingController,public toastCtrl: ToastController,public reservesService:reservesService,  private AngularFireAuth: AngularFireAuth,private afDB: AngularFireDatabase, public SignUpService: SignUpService, public sendCoordsService: sendCoordsService,public modalCtrl: ModalController, private geoFireService: geofireService, public alertCtrl: AlertController ) {\n  console.log(\"AQUI EMPIEZA\")\n\n  this.loading = this.loadingCtrl.create({\n    spinner: 'bubbles',\n    content: `\n      <div class=\"custom-spinner-container\">\n        <div class=\"custom-spinner-box\"></div>\n      </div>`\n      });\n  this.loading.present();\n\n    this.afDB.database.ref('usersTest/' + this.userUid).once('value').then((snap)=>{\n      this.user = snap.val();\n      console.log(this.user);\n      \n  })\n\n  \n    this.latOr = this.navParams.get('latOr');\n    this.lngOr = this.navParams.get('lngOr');\n    this.latDest = this.navParams.get('latDest');\n    this.lngDest = this.navParams.get('lngDest');\n    this.pointsAlongRoute = this.navParams.get('pointsAlongRoute');\n    this.indexesOfPointsAlongRoute = this.navParams.get('indexesOfPointsAlongRoute');\n  \n\n\n        this.reservesService.getReserves( this.userUid).takeUntil(this.unsubscribe)    \n        .subscribe(reserves => {\n          // this.initiatedTrips = [];\n          // this.reservesAvailable = [];\n          \n          this.ReservesGeofire = reserves; \n          console.log(this.ReservesGeofire);\n          \n          if(this.ReservesGeofire.length === 0){\n              //there are no reserves to show\n              this.noReserve = true;\n          }else{\n              //there are reserves\n              this.noReserve = false;  \n          }\n          // this.presentLoadingCustom(this.ReservesGeofire);\n          \n            this.getAvailableReserves();\n         \n          \n\n        });\n\n\n        this.reservesService.getCrews( this.userUid).takeUntil(this.unsubscribe)    \n        .subscribe(crews => {\n          // this.initiatedTrips = [];\n       \n          \n          this.CrewsGeofire = crews; \n          console.log(this.CrewsGeofire);\n          \n          if(this.CrewsGeofire.length === 0){\n              //there are no reserves to show\n              this.noCrew = true;\n          }else{\n              //there are reserves\n              this.noCrew = false;  \n          }\n          // this.presentLoadingCustom(this.ReservesGeofire);\n          \n            this.getAvailableCrews();\n         \n          \n\n        });\n\n\n\n        this.reservesService.getSeenReservesInAvailableReserves( this.userUid).subscribe((reserve)=>{\n          this.reservesAvailable = reserve;\n          console.log(this.reservesAvailable);\n\n          \n        })\n\n        this.reservesService.getSeenReservesInAvailableReservesRoute( this.userUid).subscribe((reserve)=>{\n          this.routeTrips = reserve;\n          console.log(this.routeTrips);\n          \n          // this.getButtonStarter()\n        })\n\n\n        this.reservesService.getSeenCrewsInAvailableCrews( this.userUid).subscribe((crew)=>{\n          this.crewsAvailable = crew;\n          console.log(this.crewsAvailable);\n\n          \n        })\n\n        this.reservesService.getSeenCrewsInAvailableCrewsRoute( this.userUid).subscribe((crew)=>{\n          this.routeCrews = crew;\n          console.log(this.routeCrews);\n          \n          // this.getButtonStarter()\n        })\n\n\n\n        \n          \n        this.loading.dismiss();\n        \n  }\n\n\n  // getButtonStarter(){\n    \n  //   if(this.reservesAvailable.length !== 0 && this.routeTrips.length === 0){\n\n      \n  //     this.segment = 'carpool';\n  //     this.segmentCarpool = 'nearby'\n  //     this.carpool();\n  //     this.nearby();\n  //   }else if(this.routeTrips.length !== 0 && this.reservesAvailable.length === 0){\n\n  //     this.segment = 'carpool';\n  //     this.segmentCarpool = 'route'\n  //     this.carpool();\n  //     this.route();\n  //   }else if(this.routeTrips.length !== 0 && this.reservesAvailable.length !== 0){\n  //     this.segment = 'carpool';\n  //     this.segmentCarpool = 'nearby'\n  //     this.carpool();\n  //     this.nearby();\n  //   }\n\n  \n  //     this.loading.dismiss();\n\n    \n  // }\n\n \n\n  ionViewDidLeave(){\n    this.unSubscribeServices();\n    \n    console.log(\"me active\")\n    this.TripsService.eliminateAvailableUsers(this.userUid);\n    this.TripsService.eliminateSeenAvailableReserves(this.userUid);\n    this.TripsService.eliminateSeenAvailableReservesRoute(this.userUid);\n\n    this.TripsService.eliminateAvailableCrews(this.userUid);\n    this.TripsService.eliminateSeenAvailableCrews(this.userUid);\n    this.TripsService.eliminateSeenAvailableCrewsRoute(this.userUid);\n\n  }\n\n\n\n      doRefresh(event) {\n        \n        this.afDB.database.ref('allCities/' + this.user.city ).once('value').then((snapGeoquery)=>{\n\n        this.setGeofireOr( snapGeoquery.val().geofireOr, this.latOr, this.lngOr, this.userUid, snapGeoquery.val().geofireDest, this.latDest, this.lngDest);\n        this.setGeofireRouteOrigin(snapGeoquery.val().geofireRoute, this.latOr, this.lngOr, snapGeoquery.val().geofireDest, this.latDest, this.lngDest, this.userUid )\n     \n\n        })\n        \n        setTimeout(() => {\n          if(this.geoquery1){\n            this.geoquery1.cancel();\n          }\n          if(this.geoquery2){\n            this.geoquery2.cancel();\n          }\n          \n          if(this.geoqueryRouteOrigin){\n            this.geoqueryRouteOrigin.cancel();\n          }\n\n          if(this.geoqueryRouteDestination){\n            this.geoqueryRouteDestination.cancel();\n          }\n\n\n\n          if(this.geofireDestinationConfirmed === false && this.geofireDestinationConfirmedOnRoute === false){\n\n            let alert = this.alertCtrl.create({\n              title: 'No hay nuevos poolers compartiendo sus viajes',\n              subTitle: 'Intenta más tarde',\n              buttons: ['OK']\n            });\n            alert.present();\n \n          }else{\n\n          }\n          event.complete();\n\n        }, 5000);\n      }\n\n\n\n     getAvailableReserves(){ \n        //bring reserves that i have entered to hide them in listride\n    // this.reservesAvailable = [];\n    //after getting reserve id and driverUid from my own user node, we used them to access the reserve information in the node reserves\n    console.log(this.ReservesGeofire);\n      \n    this.ReservesGeofire.forEach(reserveGeofire => {        \n        \n\n        if(reserveGeofire.onRouteDestination == true || reserveGeofire.onRouteOrigin == true){\n          \n          this.afDB.database.ref('/reservesTest/'+reserveGeofire.driverId+'/'+ reserveGeofire.keyReserve).once('value').then((snapTripRoute)=>{\n            let obj = snapTripRoute.val();\n            this.afDB.database.ref('/usersTest/'+ this.userUid +'/reservesSeenInAvailableReservesRoute/').remove().then(()=>{\n              this.afDB.database.ref('/usersTest/'+ this.userUid +'/reservesSeenInAvailableReservesRoute/'+ reserveGeofire.keyReserve).update(obj)\n              .then(()=>{\n                this.afDB.database.ref('/usersTest/'+ this.userUid +'/reservesSeenInAvailableReservesRoute/'+ reserveGeofire.keyReserve).update({distance: (reserveGeofire.distance*1000)})\n              })\n            })\n            \n             \n          })\n\n      }else{\n\n        this.afDB.database.ref('/reservesTest/'+ reserveGeofire.driverId +'/'+ reserveGeofire.keyReserve).once('value').then((snapReserve)=>{\n          let obj = snapReserve.val();\n          console.log(obj);\n          this.afDB.database.ref('/usersTest/'+ this.userUid +'/reservesSeenInAvailableReserves/').remove().then(()=>{\n            this.afDB.database.ref('/usersTest/'+ this.userUid +'/reservesSeenInAvailableReserves/'+ reserveGeofire.keyReserve).update(obj)\n            .then(()=>{\n              this.afDB.database.ref('/usersTest/'+ this.userUid +'/reservesSeenInAvailableReserves/'+ reserveGeofire.keyReserve).update({distance: (reserveGeofire.distance*1000)})\n            })\n          })\n        })\n\n      }\n  })\n\n  }\n\n\n\n  getAvailableCrews(){ \n    //bring crews that i have entered to hide them in listride\n// this.reservesAvailable = [];\n//after getting crew id and adminId from my own user node, we used them to access the crew information in the node crews\nconsole.log(this.CrewsGeofire);\n  \nthis.CrewsGeofire.forEach(crewGeofire => {        \n    \n\n    if(crewGeofire.onRouteDestination == true || crewGeofire.onRouteOrigin == true){\n      \n      this.afDB.database.ref('/crewsTest/'+crewGeofire.adminId+'/'+ crewGeofire.crewId).once('value').then((snapCrewRoute)=>{\n        let obj = snapCrewRoute.val();\n        this.afDB.database.ref('/usersTest/'+ this.userUid +'/crewsSeenInAvailableCrewsRoute/').remove().then(()=>{\n          this.afDB.database.ref('/usersTest/'+ this.userUid +'/crewsSeenInAvailableCrewsRoute/'+ crewGeofire.crewId).update(obj)\n          .then(()=>{\n            this.afDB.database.ref('/usersTest/'+ this.userUid +'/crewsSeenInAvailableCrewsRoute/'+ crewGeofire.crewId).update({distance: (crewGeofire.distance*1000)})\n          })\n        })\n        \n         \n      })\n\n  }else{\n\n    this.afDB.database.ref('/crewsTest/'+ crewGeofire.adminId+'/'+ crewGeofire.crewId).once('value').then((snapCrew)=>{\n      let obj = snapCrew.val();\n      console.log(obj);\n      this.afDB.database.ref('/usersTest/'+ this.userUid +'/crewsSeenInAvailableCrews/').remove().then(()=>{\n        this.afDB.database.ref('/usersTest/'+ this.userUid +'/crewsSeenInAvailableCrews/'+ crewGeofire.crewId).update(obj)\n        .then(()=>{\n          this.afDB.database.ref('/usersTest/'+ this.userUid +'/crewsSeenInAvailableCrews/'+ crewGeofire.crewId).update({distance: (crewGeofire.distance*1000)})\n        })\n      })\n    })\n\n  }\n})\n\n}\n\n\n  carpool(){\n\n    this.showCrew = false;\n    this.showCarpool = true;\n    \n    \n  }\n\n  crew(){\n   \n    this.showCarpool = false;\n    this.showCrew = true;\n  }\n\n\n  nearby(){\n    this.showRoute = false;\n    this.showNearby = true;\n\n  }\n\n  route(){\n    this.showNearby = false;\n    this.showRoute = true;\n  }\n\n  createCrew(){\n    console.log('te clickie');\n    \n    let modal = this.modalCtrl.create('CreateCrewPage', {latOr: this.latOr, lngOr: this.lngOr, latDest: this.latDest, lngDest: this.lngDest, indexesOfPointsAlongRoute: this.indexesOfPointsAlongRoute, pointsAlongRoute: this.pointsAlongRoute});\n\n    modal.present();\n\n  }\n\n\n  nearbyCrew(){\n\n    this.showRouteCrew = false;\n    this.showNearbyCrew = true; \n  }\n\n  routeCrew(){\n\n    this.showNearbyCrew = false;\n    this.showRouteCrew = true;\n\n  }\n\n\n \n confirmpopup(reserve){\n   this.reservesService.getPendingUsers(reserve.driver.userId,reserve.keyTrip).takeUntil(this.unsubscribe)\n    .subscribe(pendingUsers=>{\n      this.pendingUsers = pendingUsers\n      console.log(pendingUsers);\n     \n      \n    })\n    if( this.pendingUsers === undefined||this.pendingUsers === null){\n      //there is no one in the trip\n      let modal = this.modalCtrl.create('ConfirmpopupPage',{reserve:reserve});\n    modal.onDidDismiss(accepted => {\n        if(accepted){\n          this.unSubscribeServices();\n         this.navCtrl.pop();\n         this.TripsService.eliminateAvailableUsers(this.userUid);\n         this.TripsService.eliminateSeenAvailableReserves(this.userUid);\n         this.TripsService.eliminateSeenAvailableReservesRoute(this.userUid);\n         this.TripsService.eliminateAvailableCrews(this.userUid);\n         this.TripsService.eliminateSeenAvailableCrews(this.userUid);\n         this.TripsService.eliminateSeenAvailableCrewsRoute(this.userUid);\n\n        //  this.TripsService.eliminateSeenAvailableReservesLMU(this.SignUpService.userPlace,this.userUid)\n\n         this.navCtrl.push('ReservetripPage');\n        }\n      })\n    modal.present();\n    console.log('no hay nadie')\n    \n    }else if (this.pendingUsers.length >= 4){\n      //the trip is full \n      const toast = this.toastCtrl.create({\n        message: 'Este viaje ya tiene 4 personas reservadas, porfavor selecciona otro',\n        showCloseButton:true,\n        closeButtonText: 'OK',\n        position:'bottom'\n           });\n      toast.present();\n      console.log('menor de 4')\n    \n    }else{\n      console.log(this.pendingUsers.length)\n      //its less of 4 people\n      let modal = this.modalCtrl.create('ConfirmpopupPage',{reserve:reserve});\n    modal.onDidDismiss(accepted => {\n        if(accepted){\n          this.unSubscribeServices();\n         this.navCtrl.pop();\n         this.TripsService.eliminateAvailableUsers(this.userUid);\n         this.TripsService.eliminateSeenAvailableReserves(this.userUid);\n         this.TripsService.eliminateSeenAvailableReservesRoute(this.userUid);\n         this.TripsService.eliminateAvailableCrews(this.userUid);\n         this.TripsService.eliminateSeenAvailableCrews(this.userUid);\n         this.TripsService.eliminateSeenAvailableCrewsRoute(this.userUid);\n\n\n        //  this.TripsService.eliminateSeenAvailableReservesLMU(this.SignUpService.userPlace,this.userUid)\n\n         this.navCtrl.push('ReservetripPage');\n        }\n      })\n    modal.present();\n    console.log('else')\n    }\n\n //IMPORTANTE QUE AL FINAL SE LE COLOQUE QUE SE QUITE CUANDO ACEPTE A ALGUIEN\n  }\n\n\n\n\n  enterTrip(trip){\n   let modal = this.modalCtrl.create('ConfirmtripPage',{trip:trip});\n   modal.onDidDismiss((accepted) => {\n    if(accepted){\n        this.unSubscribeServices();\n        this.navCtrl.pop();\n        this.TripsService.eliminateAvailableUsers(this.userUid);\n        this.TripsService.eliminateSeenAvailableReserves(this.userUid);\n        this.TripsService.eliminateSeenAvailableReservesRoute(this.userUid);\n        this.TripsService.eliminateAvailableCrews(this.userUid);\n        this.TripsService.eliminateSeenAvailableCrews(this.userUid);\n        this.TripsService.eliminateSeenAvailableCrewsRoute(this.userUid);\n\n        // this.TripsService.eliminateSeenAvailableReservesLMU(this.SignUpService.userPlace,this.userUid)\n\n        this.navCtrl.push('MyridePage');\n      }\n    })\n    modal.present();\n   //IMPORTANTE QUE AL FINAL SE LE COLOQUE QUE SE QUITE CUANDO ACEPTE A ALGUIEN\n   }\n\n\n\n\n\n\n   unSubscribeServices(){\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n  \n\n\n  help(){\n    const toast = this.toastCtrl.create({\n      message: 'Estos son los conductores que se van a tu misma zona. Podrás ver sus horas en las que se van y unirte en su viaje',\n      showCloseButton:true,\n      closeButtonText: 'OK',\n      position:'top'\n         });\n    toast.present();\n  }\n\n\n\n\n\n  ////////////// GEOQUERYS FUNCTIONS //////////////////\n\n\n\n    //geoquery origin\n    setGeofireOr( radiusOr:number, latOr, lngOr, userId, radiusDest:number, latDest, lngDest ):void{ \n      let dbRef = this.afDB.database.ref(  '/geofireOr/' );\n      let geoFire = new GeoFire(dbRef); \n    \n      this.geoquery2 = geoFire.query({\n        center: [latOr, lngOr],\n        radius: radiusOr\n      })\n\n        this.keyEnteredOr(radiusDest, latDest, lngDest, userId  );\n        this.keyExitedOr( userId  );\n        \n        console.log('geoquery or added');\n    }\n\n\n    keyEnteredOr(radiusDest, latDest, lngDest,  userId ){\n      // var keyEnteredOr = false;\n      this.geoquery2.on(\"key_entered\", function(key, location, distance){\n        //  keyEnteredOr = true;\n         \n         this.geofireOriginConfirmed = true;\n         let orRouteConf = false\n         this.keysIdentifiedInOrigin.push({keyTrip:key, orRouteConf: orRouteConf, distance: distance});\n         \n         if(this.geoquery1){\n\n         }else{\n          this.setGeofireDest(radiusDest, latDest, lngDest, userId);\n         }\n         \n             \n       }.bind(this));\n      }\n    \n    \n      \n      keyExitedOr( userId  ){\n       this.geoquery2.on(\"key_exited\", function(key){\n         this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).remove()\n       }.bind(this))\n      }\n\n      \n\n\n      //geoquery origin in route\n    setGeofireRouteOrigin( radiusRoute:number, lat, lng, radiusDest, latDest, lngDest, userId):void{ \n      // console.log(this.geoquriesRouteOrigin);\n      let dbRef = this.afDB.database.ref(  '/geofireRoute/' );\n      let geoFire = new GeoFire(dbRef); \n\n      this.geoqueryRouteOrigin = geoFire.query({\n        center: [lat, lng],\n        radius: radiusRoute\n      })\n\n      this.keyEnteredRouteOrigin( userId, radiusDest, latDest, lngDest );\n      this.keyExitedRouteOrigin(  userId  );         \n    }\n\n\n\n    \n\n\n    keyEnteredRouteOrigin( userId, radiusDest, latDest, lngDest){\n\n      this.geoqueryRouteOrigin.on(\"key_entered\", function(key, location, distance){\n        \n        this.geofireOriginConfirmedOnRoute = true;\n        let orRouteConf = true\n        \n        this.afDB.database.ref('/geofireRoute/' + key ).once('value').then((snap)=>{\n          // quede aqui, para verificar que las key identificadas son iguales\n          let keyTrip = snap.val().keyTrip;\n          this.keysIdentifiedInOriginRoute.push({\n            keyTrip: keyTrip,\n            orRouteConf: orRouteConf,\n            distance: distance\n          })\n\n        }).then(()=>{\n          if(this.geoquery1){\n\n          }else{\n           this.setGeofireDest(radiusDest, latDest, lngDest, userId);\n          }\n\n        });\n\n        console.log('ENTRE EN ORIGIN EN ROUTE');\n        \n      }.bind(this));\n    }\n\n\n\n    keyExitedRouteOrigin( userId){\n      this.geoqueryRouteOrigin.on(\"key_exited\", function(key){\n        this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).remove()\n        \n      }.bind(this))\n      \n    }\n\n\n  \n    //geoquery destination\n    setGeofireDest( radiusDest:number, latDest, lngDest, userId):void{ \n      console.log('se prendio geoquery destination, debo salir una sóla vez');\n      console.log(this.keysIdentifiedInOriginRoute);\n      \n      let dbRef = this.afDB.database.ref(  '/geofireDest/' );\n      let geoFire = new GeoFire(dbRef); \n    \n      this.geoquery1 = geoFire.query({\n        center: [latDest, lngDest],\n        radius: radiusDest\n      })\n    \n      \n      this.keyEnteredDest( userId);\n      this.keyExitedDest(userId );\n    \n    console.log('geoquery dest added');\n    }\n\n\n\n    keyEnteredDest( userId ){\n      \n      this.geoquery1.on(\"key_entered\", function(key, location, distance){\n      console.log(key);\n      if(this.keysIdentifiedInOrigin.length !== 0){\n\n        let count = 0\n        for(let element of this.keysIdentifiedInOrigin){\n          count = count + 1\n          if(element.keyTrip === key){\n            this.geofireDestinationConfirmed = true;\n            this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).update({\n                keyReserve: key,\n                distance: element.distance\n              \n               }).then(()=> {\n                   return this.afDB.database.ref( '/geofireDest/'+ key).once('value').then((snap) => {\n                    this.driverOnNodeDest = snap.val();\n        \n                    this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).update({\n                        driverId: this.driverOnNodeDest.driverId\n            \n                    })  \n                })\n               }) \n             \n          }\n  \n          if (count === this.keysIdentifiedInOrigin.length){\n            console.log('si se ejecuto el for de keysOrigin');\n            \n            for(let element of this.keysIdentifiedInOriginRoute){\n  \n              if(element.keyTrip === key){\n                console.log('un key de destination es igual al keytrip que fue identificado en origen');\n  \n                this.geofireDestinationConfirmed = true;\n                this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).once('value')\n                .then((snapshot)=>{\n                  if(snapshot.val()){\n      \n                  }else{\n                    this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).update({\n                      keyReserve: key,\n                      onRouteOrigin: true,\n                      distance: element.distance\n                     }).then(()=> {\n                         return this.afDB.database.ref( '/geofireDest/'+ key).once('value').then((snap) => {\n                          this.driverOnNodeDest = snap.val();\n              \n                          this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).update({\n                              driverId: this.driverOnNodeDest.driverId\n                  \n                          })  \n                      })\n                     })\n                  }\n                })\n              }\n  \n            }\n          }\n        }\n\n      }else if(this.keysIdentifiedInOriginRoute.length !== 0){\n\n        for(let element of this.keysIdentifiedInOriginRoute){\n  \n          if(element.keyTrip === key){\n            console.log('un key de destination es igual al keytrip que fue identificado en origen');\n\n            this.geofireDestinationConfirmed = true;\n            this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).once('value')\n            .then((snapshot)=>{\n              if(snapshot.val()){\n  \n              }else{\n                this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).update({\n                  keyReserve: key,\n                  onRouteOrigin: true,\n                  distance: element.distance\n                 }).then(()=> {\n                     return this.afDB.database.ref( '/geofireDest/'+ key).once('value').then((snap) => {\n                      this.driverOnNodeDest = snap.val();\n          \n                      this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + key).update({\n                          driverId: this.driverOnNodeDest.driverId\n              \n                      })  \n                  })\n                 })\n              }\n            })\n          }\n\n        }\n\n      }else{\n\n      }\n     \n    \n     }.bind(this))\n\n\n     setTimeout(() => {\n      this.geoquery1.on(\"ready\", function(){\n        \n        this.afDB.database.ref('allCities/' + this.userInfo.city ).once('value').then((snap)=>{\n\n            this.setGeofireRouteDest(snap.val().geofireRoute,  this.myLatLngDest.lat(), this.myLatLngDest.lng(), userId);\n\n        })\n        \n \n      \n    }.bind(this))\n  }, 300);\n }\n\n\n\n   \n   \n   keyExitedDest(userId){\n     \n     this.geoquery1.on(\"key_exited\", function(key){\n       this.afDB.database.ref(  '/usersTest/' + userId + '/availableReserves/' + key).remove()\n     }.bind(this))\n   }\n\n\n\n    //geoquery destination in route\n    setGeofireRouteDest( radiusRoute:number, lat, lng, userId ):void{ \n      console.log('se ejecutó');\n\n      let dbRef = this.afDB.database.ref(  '/geofireRoute/' );\n      let geoFire = new GeoFire(dbRef); \n    \n      this.geoqueryRouteDestination = geoFire.query({\n        center: [lat, lng],\n        radius: radiusRoute\n      })\n\n\n      this.keyEnteredRouteDest(  userId );\n      this.keyExitedRouteDest( userId  ); \n      \n           \n    }\n\n    \n\n\n\n\n    keyEnteredRouteDest(userId){\n\n      this.geoqueryRouteDestination.on(\"key_entered\", function(key, location, distance){\n  \n        \n        this.afDB.database.ref('/geofireRoute/' + key ).once('value').then((snap)=>{\n          this.keyTripForGeofireInRouteDest = snap.val().keyTrip;\n          this.driverIdForGeofireInRouteDest = snap.val().driverId;\n          \n          \n        }).then(()=>{\n          if(this.keysIdentifiedInOrigin !== 0){\n\n            let count = 0\n            for(let element of this.keysIdentifiedInOrigin){\n              count = count + 1\n              if(element.keyTrip === this.keyTripForGeofireInRouteDest){\n                this.geofireDestinationConfirmedOnRoute = true;\n                \n                this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + this.keyTripForGeofireInRouteDest).once('value')\n                .then((snapConf)=>{\n                  if(snapConf.val()){\n                    console.log('te voy a dejar relajado ya que ya te identifiqué');\n  \n                  }else{\n  \n                    this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + this.keyTripForGeofireInRouteDest).update({\n                      keyReserve: this.keyTripForGeofireInRouteDest,\n                      driverId: this.driverIdForGeofireInRouteDest,\n                      onRouteDestination: true,\n                      distance: element.distance\n                     })\n  \n                  }\n                })\n                 \n              }\n  \n              if(count === this.keysIdentifiedInOrigin.length){\n                for(let element of this.keysIdentifiedInOriginRoute){\n                  if(element.keyTrip === this.keyTripForGeofireInRouteDest){\n                    this.geofireDestinationConfirmedOnRoute = true;\n      \n                    this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + this.keyTripForGeofireInRouteDest).once('value')\n                        .then((snapConf)=>{\n                          if(snapConf.val().driverId === this.driverIdForGeofireInRouteDest){\n                            console.log('te voy a dejar relajado ya que ya te identifiqué');  \n                          }else{\n                            this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + this.keyTripForGeofireInRouteDest).update({\n                              keyReserve: this.keyTripForGeofireInRouteDest,\n                              driverId: this.driverIdForGeofireInRouteDest,\n                              onRouteDestination: true,\n                              onRouteOrigin: true, \n                              distance: element.distance \n                             })\n        \n                          }\n                        })\n      \n                  }\n                }\n              }\n            }\n\n          }else{\n            console.log('no hay nada en ' + this.keysIdentifiedInOrigin);\n            \n          }\n        })\n        .then(()=>{\n          console.log(this.keyTripForGeofireInRouteDest);\n           \n          console.log('ahora si aqui te encuentro 1');\n          \n          if(this.keysIdentifiedInOriginRoute !== 0){\n            console.log('ahora si aqui te encuentro 2');\n            \n            for(let element of this.keysIdentifiedInOriginRoute){\n              if(element.keyTrip === this.keyTripForGeofireInRouteDest){\n                this.geofireDestinationConfirmedOnRoute = true;\n  \n                this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + this.keyTripForGeofireInRouteDest).once('value')\n                    .then((snapConf)=>{\n                    \n                      \n                      if(snapConf.val()){\n\n                        if(snapConf.val().driverId === this.driverIdForGeofireInRouteDest){\n                          console.log('te voy a dejar relajado ya que ya te identifiqué');  \n                        }else{\n                          this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + this.keyTripForGeofireInRouteDest).update({\n                            keyReserve: this.keyTripForGeofireInRouteDest,\n                            driverId: this.driverIdForGeofireInRouteDest,\n                            onRouteDestination: true,\n                            onRouteOrigin: true, \n                            distance: element.distance \n                           })\n      \n                        }\n                      }else{\n\n                        this.afDB.database.ref( '/usersTest/' + userId + '/availableReserves/' + this.keyTripForGeofireInRouteDest).update({\n                          keyReserve: this.keyTripForGeofireInRouteDest,\n                          driverId: this.driverIdForGeofireInRouteDest,\n                          onRouteDestination: true,\n                          onRouteOrigin: true, \n                          distance: element.distance \n                         })\n    \n                      }\n                      \n                    })\n  \n              }\n            }\n\n          }else{\n\n          }\n         \n        })\n                \n      }.bind(this))\n\n    }\n\n\n\n\n\n    keyExitedRouteDest( userId){\n      \n      this.geoqueryRouteDestination.on(\"key_exited\", function(key){\n\n        this.afDB.database.ref(  '/usersTest/' + userId + '/availableReserves/' + key).remove()\n\n      }.bind(this))\n      \n    }\n\n\n  \n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/p-listride/listride.ts"],"sourceRoot":""}